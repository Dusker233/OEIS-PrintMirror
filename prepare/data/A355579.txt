{
    "number": 355579,
    "data": "1,2,4,6,12,24,36,48,72,144,288,432,864,1728,2592,3456,5184,10368,20736,31104,41472,62208,124416,248832,373248,746496,1492992,2239488,2985984,4478976,8957952,17915904,26873856,53747712,107495424,161243136,214990848,322486272",
    "name": "Numbers k such that A072079(k)/k sets a new record.",
    "comment": [
        "Numbers m such that A072079(m)/m > A072079(k)/k for all k < m.",
        "All the terms are 3-smooth numbers (A003586).",
        "Equivalently, 3-smooth numbers k such that A000203(k)/k sets a new record.",
        "Analogous to superabundant numbers (A004394) with 3-smooth numbers only."
    ],
    "link": [
        "Michael S. Branicky, <a href=\"/A355579/b355579.txt\">Table of n, a(n) for n = 1..4370</a>"
    ],
    "formula": [
        "Limit_{n->oo} A072079(a(n))/a(n) = lim_{n->oo} A000203(a(n))/a(n) = 3."
    ],
    "example": [
        "The numbers of 3-smooth divisors of the first 6 positive integers are 1, 3, 4, 7, 1 and 12. The corresponding values of A072079(k)/k are 1, 3/2, 4/3, 7/4, 1/5 and 2. The record values, 1, 3/2, 7/4 and 2, occur at 1, 2, 4 and 6, the first 4 terms of this sequence."
    ],
    "mathematica": [
        "s[n_] := Module[{e = IntegerExponent[n, {2, 3}], p}, p = {2, 3}^e; If[Times @@ p == n, (2^(e[[1]] + 1) - 1)*(3^(e[[2]] + 1) - 1)/(2*n), 0]]; sm = 0; seq = {}; Do[sn = s[n]; If[sn > sm, sm = sn; AppendTo[seq, n]], {n, 1, 10^6}]; seq"
    ],
    "program": [
        "(PARI) lista(nmax) = {my(list = List(), rmax = 0, e2, e3, r); for(n = 1, nmax, e2 = valuation(n, 2); e3 = valuation(n, 3); r = if(2^e2 * 3^e3 == n, (2^(e2 + 1) - 1)*(3^(e3 + 1) - 1)/(2*n), 0); if(r > rmax, rmax = r;  listput(list, n))); Vec(list)};",
        "(Python)",
        "from fractions import Fraction",
        "from sympy import multiplicity as v",
        "from itertools import count, takewhile",
        "def f(n): return Fraction((2**(v(2, n)+1)-1) * (3**(v(3, n)+1)-1)//2, n)",
        "def smooth3(lim):",
        "    pows2 = list(takewhile(lambda x: x<lim, (2**i for i in count(0))))",
        "    pows3 = list(takewhile(lambda x: x<lim, (3**i for i in count(0))))",
        "    return sorted(c*d for c in pows2 for d in pows3 if c*d <= lim)",
        "def aupto(lim):",
        "    data, records, record = smooth3(lim), [], -1",
        "    for argv, v in zip(data, map(f, data)):",
        "        if v > record: record = v; records.append(argv)",
        "    return records",
        "print(aupto(10**9)) # _Michael S. Branicky_, Jul 08 2022"
    ],
    "xref": [
        "Subsequence of A003586 and A355578.",
        "Cf. A000203, A004394, A072079."
    ],
    "keyword": "nonn",
    "offset": "1,2",
    "author": "_Amiram Eldar_, Jul 08 2022",
    "references": 2,
    "revision": 10,
    "time": "2022-07-09T15:29:03-04:00",
    "created": "2022-07-09T11:12:04-04:00"
}
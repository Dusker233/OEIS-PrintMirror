{
    "number": 375294,
    "data": "0,0,48,2592,90720,2586480,65161968,1509658752,32911582080,685119782160",
    "name": "Number of winning combinations in the game Icosahedron Bingo after n rolls.",
    "comment": [
        "In the game \"Icosahedron Bingo\" each player picks 9 numbers between 1 and 20 and places them in a 3 X 3 grid. Then an icosahedron showing the numbers from 1 to 20 is rolled and the players cross out the rolled number if this number appears in their grid. The player who first crosses out a row, a column or a diagonal has won, just like in the normal Bingo game."
    ],
    "example": [
        "a(3) = 48: There are 3 rows, 3 columns and 2 diagonals, which gives 8 alignments to achieve Bingo. If the numbers in one alignment are called a, b and c then there are 6 possible permutations: abc, acb, bac, bca, cab and cba. 8 alignments times 6 permutations equals 48."
    ],
    "program": [
        "(Python)",
        "row1 = 1+2+4;  row2 = 8+16+32;  row3 = 64+128+256",
        "col1 = 1+8+64; col2 = 2+16+128; col3 = 4+32+256",
        "dia1 = 1+16+256; dia2 = 4+16+64",
        "n = 9 # number of draws",
        "count = [0] * (n+1)",
        "def next_draw(my_set, mult, level) -> list[int]:",
        "    for i in range(9):",
        "        new_draw = 2 ** i",
        "        if my_set & new_draw == 0: # a new of my selected 9 numbers is drawn",
        "            y = my_set + new_draw  # and is added to my set",
        "            if (row1&y == row1 or row2&y == row2 or row3&y == row3",
        "            or  col1&y == col1 or col2&y == col2 or col3&y == col3",
        "            or  dia1&y == dia1 or dia2&y == dia2):",
        "                count[level] += mult # bingo!",
        "            elif level < n:",
        "                next_draw(y, mult, level+1)",
        "        elif level < n:      # a number is drawn that is already in my set",
        "            next_draw(my_set, mult, level+1)",
        "    if level < n:            # a number is drawn that is not amongst my 9 numbers",
        "        next_draw(my_set, mult*11, level+1)",
        "    return count",
        "print(\"Terms:\", next_draw(0, 1, 0))"
    ],
    "keyword": "nonn,hard,more,new",
    "offset": "1,3",
    "author": "_Ruediger Jehn_, Aug 10 2024",
    "references": 0,
    "revision": 19,
    "time": "2024-08-10T15:57:12-04:00",
    "created": "2024-08-10T15:57:12-04:00"
}
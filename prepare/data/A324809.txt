{
    "number": 324809,
    "data": "1,1,4,27,256,3125,46656,823543,16777216,387420489,9999999990,285311669390,8916100350828,302875100019492,11112006413890382,437893865348970030,18446742559675475760,827240169494482480880,39346402337538654701772,1978419291074273862219834",
    "name": "a(n) is the number of endofunctions on a set of size n with preimage constraint {0, 1, 2, 3, 4, 5, 6, 7, 8, 9}.",
    "comment": [
        "A preimage constraint is a set of nonnegative integers such that the size of the inverse image of any element is one of the values in that set.",
        "Thus, the n-th term of the sequence is the number of endofunctions on a set of size n such that each preimage has at most 9 elements. Equivalently, it is the number of n-letter words from an n-letter alphabet such that no letter appears more than 9 times."
    ],
    "link": [
        "B. Otto, <a href=\"https://arxiv.org/abs/1903.00542\">Coalescence under Preimage Constraints</a>, arXiv:1903.00542 [math.CO], 2019, Corollaries 5.6 and 7.8."
    ],
    "formula": [
        "a(n) = n! * [x^n] e_9(x)^n, where e_k(x) is the truncated exponential 1 + x+ x^2/2! + ... + x^k/k!. The link above yields explicit constants c_k, r_k so that the columns are asymptotically c_9 * n^(-1/2) * r_9^-n."
    ],
    "maple": [
        "b:= proc(n, i) option remember; `if`(n=0 and i=0, 1, `if`(i<1, 0,",
        "      add(b(n-j, i-1)*binomial(n, j), j=0..min(9, n))))",
        "    end:",
        "a:= n-> b(n$2):",
        "seq(a(n), n=0..20);  # _Alois P. Heinz_, Apr 01 2019"
    ],
    "mathematica": [
        " b[n_, i_] := b[n, i] = If[n == 0 && i == 0, 1, If[i < 1, 0, Sum[b[n - j, i - 1]*Binomial[n, j], {j, 0, Min[9, n]}]]];",
        "a[n_] := b[n, n];",
        "a /@ Range[0, 20] (* _Jean-Fran\u00e7ois Alcover_, Mar 01 2020, after _Alois P. Heinz_ *)"
    ],
    "program": [
        "(Python)",
        "# print first num_entries entries in the sequence",
        "import math, sympy; x=sympy.symbols('x')",
        "k=9; num_entries = 64",
        "P=range(k+1); eP=sum([x**d/math.factorial(d) for d in P]); r = [1]; curr_pow = 1",
        "for term in range(1,num_entries):",
        "...curr_pow=(curr_pow*eP).expand()",
        "...r.append(curr_pow.coeff(x**term)*math.factorial(term))",
        "print(r)"
    ],
    "xref": [
        "Column k=9 of A306800; see that entry for sequences related to other preimage constraints constructions."
    ],
    "keyword": "easy,nonn",
    "offset": "0,3",
    "author": "_Benjamin Otto_, Mar 25 2019",
    "references": 1,
    "revision": 12,
    "time": "2020-03-01T04:23:27-05:00",
    "created": "2019-04-05T18:05:41-04:00"
}
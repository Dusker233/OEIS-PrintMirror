{
    "number": 349148,
    "data": "1,1,2,3,6,9,25,39,84,158,381,610,2175,3489,7252,24744,54658,89031,273604,443746,1690517,5261990,9399018,15470605,58261863,102574465",
    "name": "Number of unordered n-tuples {x_1, x_2, x_3, ..., x_n} such that Sum_{k=1..n} 1/x_k is an integer and x_k is an integer between 1 and n for 1 <= k <= n.",
    "example": [
        "1/1 + 1/1 = 2 and 2 is an integer.",
        "1/1 + 1/2 = 3/2.",
        "1/2 + 1/2 = 1 and 1 is an integer.",
        "So a(2) = 2."
    ],
    "program": [
        "(Ruby)",
        "def A(n)",
        "  return 1 if n == 0",
        "  cnt = 0",
        "  (1..n).to_a.repeated_combination(n){|i|",
        "    cnt += 1 if (1..n).inject(0){|s, j| s + 1 / i[j - 1].to_r}.denominator == 1",
        "  }",
        "  cnt",
        "end",
        "def A349148(n)",
        "  (0..n).map{|i| A(i)}",
        "end",
        "p A349148(10)",
        "(Python)",
        "from math import lcm",
        "from itertools import combinations_with_replacement",
        "def A349148(n):",
        "    k = lcm(*range(2,n+1))",
        "    dlist = (k//d for d in range(1,n+1))",
        "    return sum(1 for d in combinations_with_replacement(dlist,n) if sum(d) % k == 0) # _Chai Wah Wu_, Nov 09 2021"
    ],
    "xref": [
        "Cf. A349146."
    ],
    "keyword": "nonn,more",
    "offset": "0,3",
    "author": "_Seiichi Manyama_, Nov 08 2021",
    "ext": [
        "a(16)-a(25) from _Alois P. Heinz_, Nov 08 2021"
    ],
    "references": 2,
    "revision": 39,
    "time": "2023-07-15T14:02:13-04:00",
    "created": "2021-11-09T08:02:27-05:00"
}
{
    "number": 358211,
    "data": "1,8,215,374,614,849,4142,7945,5964055,8008913,7131377227,8829981707",
    "name": "Self-locating strings within e: numbers k such that the string k is at position k (after the decimal point) in the decimal digits of e, where 7 is the 0th digit.",
    "example": [
        "The first two terms 1 and 8 are depicted here:",
        "Position:      0123456789...",
        "Digits of e: 2.7182818284...",
        "               .^......^....",
        "1 is the first term because 1 is in position 1 after the decimal point (when starting to count with 0).",
        "8 is the second term because 8 is in position 8 etc."
    ],
    "program": [
        "(Python)",
        "# after _Michael S. Branicky_ in A064810",
        "# First get a file with e digits, e.g. https://www4.baumann.at/downloads/e.txt",
        "with open('e.txt', 'r') as f: digits_of_e = f.readline()[2:]",
        "def afind():",
        "  global digits_of_e",
        "  for k in range(len(digits_of_e)):",
        "    s = str(k)",
        "    if digits_of_e[k:k+len(s)] == s: print(k, end=\", \")",
        "afind()"
    ],
    "xref": [
        "Cf. A001113, A064810, A205648."
    ],
    "keyword": "base,nonn,more",
    "offset": "0,2",
    "author": "_Chris Baumann_, Nov 04 2022",
    "ext": [
        "a(9)-a(12) from _Michael S. Branicky_, Nov 04 2022"
    ],
    "references": 0,
    "revision": 24,
    "time": "2022-12-19T13:55:52-05:00",
    "created": "2022-12-19T13:55:52-05:00"
}
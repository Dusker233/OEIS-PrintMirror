{
    "number": 370612,
    "data": "3,5,14,133,706,2490,24258,217230,2992890,24674730,647850030",
    "name": "The smallest number whose prime factor concatenation, when written in base n, does not contain 0 and contains all digits 1,...,(n-1) at least once.",
    "comment": [
        "All terms are squarefree. Many thanks to Michael Branicky for pointing out errors in the terms in the original submission."
    ],
    "formula": [
        "(n-1)! <= a(n) <= A371194(n)."
    ],
    "example": [
        "a(2) = 3 = 3 whose prime factors in base 2 is: 11.",
        "a(3) = 5 = 5 whose prime factors in base 3 is: 12.",
        "a(4) = 14 = 2*7 whose prime factors in base 4 is: 2, 13.",
        "a(5) = 133 = 7*19 whose prime factors in base 5 is: 12, 34.",
        "a(6) = 706 = 2*353 whose prime factors in base 6 is: 2, 1345.",
        "a(7) = 2490 = 2*3*5*83 whose prime factors in base 7 is: 2, 3, 5, 146.",
        "a(8) = 24258 = 2*3*13*311 whose prime factors in base 8 is: 2, 3, 15, 467.",
        "a(9) = 217230 = 2*3*5*13*557 whose prime factors in base 9 is: 2, 3, 5, 14, 678.",
        "a(10) = 2992890 = 2*3*5*67*1489.",
        "a(11) = 24674730 = 2*3*5*19*73*593 whose prime factors in base 11 is: 2, 3, 5, 18, 67, 49a.",
        "a(12) = 647850030 = 2*3*5*19*1136579 whose prime factors in base 12 is: 2, 3, 5, 17, 4698ab."
    ],
    "program": [
        "(Python)",
        "from math import factorial",
        "from itertools import count",
        "from sympy import primefactors",
        "from sympy.ntheory import digits",
        "def A370612(n): return next(k for k in count(max(factorial(n-1),2)) if 0 not in (s:=set.union(*(set(digits(p,n)[1:]) for p in primefactors(k)))) and len(s) == n-1)"
    ],
    "xref": [
        "Cf. A371194, A372309, A372249, A371993, A027746, A371958, A058909, A185122."
    ],
    "keyword": "nonn,base,more,new",
    "offset": "2,1",
    "author": "_Chai Wah Wu_, Apr 30 2024",
    "references": 0,
    "revision": 12,
    "time": "2024-05-02T14:29:57-04:00",
    "created": "2024-05-02T14:29:57-04:00"
}
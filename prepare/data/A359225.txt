{
    "number": 359225,
    "data": "9,18,27,28,35,36,45,54,56,63,65,70,72,81,84,90,91,99,105,108,112,117,126,130,133,135,140,144,152,153,162,168,171,175,180,182,189,195,196,198,207,210,216,217,224,225,234,243,245,252,260,261,266,270,273,279,280,288,297",
    "name": "Numbers that can be expressed as (a^3 + b^3)/(a*b) with b > a >= 1.",
    "comment": [
        "Numbers k such that k*a*b = a^3 + b^3 has integer solutions with b > a >= 1.",
        "Numbers of the form r*(s^3 + t^3) with r >= 1 and s > t >= 1, by a = r*s*t^2, b = r*s^2*t."
    ],
    "example": [
        "63 can be expressed as (14^3 + 28^3)/(14*28) so 63 is a term."
    ],
    "mathematica": [
        "n = 300; Union@",
        " Sort@Flatten@",
        "   Table[r*(s^3 + t^3), {r, 1, n/9}, {s, 1,",
        "     CubeRoot[n/(2*r) - 1]}, {t, s + 1, CubeRoot[n/r - s^3]}]"
    ],
    "program": [
        "(Python)",
        "def aupto(limit):",
        "    c=[k**3 for k in range(1,limit) if k**3<=limit]",
        "    s=set()",
        "    for i in range(len(c)):",
        "        for j in range(i+1,len(c)):",
        "            t=(c[i]+c[j])",
        "            for r in range(1, limit//t+1) :",
        "                s.add(r*t)",
        "    return(sorted(s))",
        "print(aupto(500))",
        "(MATLAB)",
        "function a = A359225( max_n )",
        "    OneToN = [1:max_n]; a = [];",
        "    for n = 1:max_n-1",
        "        A = (OneToN(1:n)'*ones(1,max_n-n)).^3 ...",
        "          + (ones(n,1)*OneToN(n+1:end)).^3;",
        "        a = unique([a reshape(A(:),1,numel(A))]);",
        "        a = a(1:min(length(a),max_n));",
        "    end",
        "    A = a'*OneToN;",
        "    a = unique(A(:)); a = a(1:min(length(a),max_n))';",
        "end"
    ],
    "xref": [
        "Cf. A009003, A024670 (subsequence)."
    ],
    "keyword": "nonn,easy",
    "offset": "1,1",
    "author": "_Zhining Yang_, Dec 22 2022",
    "references": 2,
    "revision": 34,
    "time": "2023-01-28T11:48:45-05:00",
    "created": "2023-01-28T11:48:45-05:00"
}
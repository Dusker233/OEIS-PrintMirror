{
    "number": 69518,
    "data": "4,28,44,188,248,444,1488,2288,2448,4444,12888,14488,22488,24448,44444,118888,124888,144488,222888,224488,244448,444444,1148888,1228888,1244888,1444488,2224888,2244488,2444448,4444444,11288888,11448888,12248888,12444888",
    "name": "Geometric mean of digits = 4 and digits are in nondecreasing order.",
    "comment": [
        "No number is obtainable by permuting the digits of other members - only one with ascending order of digits is included."
    ],
    "link": [
        "Michael S. Branicky, <a href=\"/A069518/b069518.txt\">Table of n, a(n) for n = 1..10000</a>"
    ],
    "example": [
        "1488 is a term but 1848 is not."
    ],
    "mathematica": [
        "a = {}; b = 4; Do[c = Apply[ Times, IntegerDigits[n]]/b^Floor[ Log[10, n] + 1]; If[c == 1 && Position[a, FromDigits[ Sort[ IntegerDigits[n]]]] == {}, Print[n]; a = Append[a, n]], {n, 1, 10^7}]"
    ],
    "program": [
        "(Python)",
        "from math import prod",
        "from sympy.utilities.iterables import multiset_combinations",
        "def auptod(terms):",
        "  n, digits, alst, powsexps2 = 0, 1, [], [(1, 0), (2, 1), (4, 2), (8, 3)]",
        "  while n < terms:",
        "    target = 4**digits",
        "    mcstr = \"\".join(str(d)*(digits//max(1, r//2)) for d, r in powsexps2)",
        "    for mc in multiset_combinations(mcstr, digits):",
        "      if prod(map(int, mc)) == target:",
        "        n += 1",
        "        alst.append(int(\"\".join(mc)))",
        "        if n == terms: break",
        "    else: digits += 1",
        "  return alst",
        "print(auptod(34)) # _Michael S. Branicky_, Apr 28 2021"
    ],
    "xref": [
        "Cf. A061428, A069512, A069516."
    ],
    "keyword": "nonn,base",
    "offset": "1,1",
    "author": "_Amarnath Murthy_, Mar 30 2002",
    "ext": [
        "Edited and extended by _Robert G. Wilson v_, Apr 01 2002",
        "Name edited and a(31) and beyond from _Michael S. Branicky_, Apr 28 2021"
    ],
    "references": 4,
    "revision": 12,
    "time": "2021-04-29T00:57:08-04:00",
    "created": "2003-05-16T03:00:00-04:00"
}
{
    "number": 52362,
    "data": "0,3,11,13,17,21,23,73,101,103,111,113,117,121,123,173,323,373,1101,1103,1111,1113,1117,1121,1123,1173,1323,1373,3323,3373,11373,13323,13373,17373,21373,23323,23373,73373,101323,101373,103323,103373,111373,113323,113373,117373",
    "name": "Indices of records in length of English name of n including spaces and dashes (A052360): n such that k < n => A052360(k) < A052360(n).",
    "comment": [
        "From _M. F. Hasler_, Aug 12 2020: (Start)",
        "This sequence uses A052360 which counts all characters in the English name of the numbers, including spaces and hyphens, in contrast to A052363 which uses A005589 which only counts the letters. Thus, e.g., \"twenty-one\" is in this sequence but not in A052363.",
        "It appears that from 1323 on, all terms end in -323 or in -373. After 117(373) these are prefixed by 121, 123, 173, 323, 373 (thousand). Then the next terms is 1'103'323, and after 1'373'373, the next terms are > 3*10^6, then > 11*10^6, etc.",
        "I conjecture that from 103 on all d-digit terms have a smaller (most often but not always (d-1)-digit) term as suffix, and from 173 on they also have an earlier term as prefix. (End)"
    ],
    "example": [
        "From _M. F. Hasler_, Aug 12 2020: (Start)",
        "The first term is zero, since all other nonnegative integers (thus certainly all those with longer names) are larger than zero.",
        "\"One\" and \"two\" are not in the sequence, since \"zero\" is smaller but has a longer name.",
        "\"Three\" is again in the sequence since all smaller numbers (0, 1 and 2) have shorter names. And so on. (End)"
    ],
    "program": [
        "(PARI) m=0;for(n=0,2e5, if(m<A052360(n), m=A052360(n); print1(n\", \"))) \\\\ _M. F. Hasler_, Aug 12 2020",
        "(Python)",
        "from itertools import count, islice",
        "from num2words import num2words as n2w",
        "def f(n): return len(n2w(n).replace(\" and\", \"\").replace(chr(44), \"\"))",
        "def agen():",
        "    record = 0",
        "    for n in count(0):",
        "        value = f(n)",
        "        if value > record: yield n; record = value",
        "print(list(islice(agen(), 46))) # _Michael S. Branicky_, Jul 12 2022"
    ],
    "xref": [
        "Cf. A005589, A052360, A052363."
    ],
    "keyword": "nonn,word,nice,easy",
    "offset": "1,2",
    "author": "_Allan C. Wechsler_, Mar 07 2000",
    "ext": [
        "Minor edits by _Ray Chandler_, Jul 22 2009",
        "Name and example edited and more terms by _M. F. Hasler_, Aug 12 2020"
    ],
    "references": 8,
    "revision": 25,
    "time": "2022-07-12T15:31:07-04:00",
    "created": "2000-05-08T03:00:00-04:00"
}
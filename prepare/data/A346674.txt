{
    "number": 346674,
    "data": "1518375,6637317,16781059,20274157,20680348,22080638,24026537,25394302,26059015,28926467,40459791,42057668,42390227,42943634,43983547,47788382,49974597,51201829,59344568,63236613,63341298,70557689,74946923,76642382,77213479,77641296",
    "name": "Nonnegative numbers k such that MD5(k interpreted as a string) contains only decimal digits.",
    "comment": [
        "See A234849 for more information about MD5.",
        "This sequence is probably infinite, because MD5 returns a fixed-length output, but we don't know if outputs containing only decimal digits appear infinitely many times. Even if this is the case, it would not be enough, as we would not know if this holds when we consider the input as a number (interpreted as a string)."
    ],
    "link": [
        "Michael S. Branicky, <a href=\"/A346674/b346674.txt\">Table of n, a(n) for n = 1..10000</a>",
        "Wikipedia, <a href=\"https://en.wikipedia.org/wiki/MD5\">MD5</a>"
    ],
    "example": [
        "a(1) = 1518375, because 1518375 is the smallest k >= 0 such that MD5(k) contains only decimal digits: MD5(\"1518375\") = \"93240121540327474319550261818423\"."
    ],
    "mathematica": [
        "Monitor[Do[If[!StringContainsQ[Hash[ToString@k,\"MD5\",\"HexString\"],Alphabet[]],Print@k],{k,10^9}],k] (* _Giorgos Kalogeropoulos_, Jul 28 2021 *)"
    ],
    "program": [
        "(Python)",
        "from hashlib import md5",
        "i=0",
        "while True:",
        "    m = md5()",
        "    m.update(str(i).encode('utf-8'))",
        "    result = m.hexdigest()",
        "    if result.isdecimal():",
        "        print(i)",
        "    i+=1"
    ],
    "xref": [
        "Cf. A234849."
    ],
    "keyword": "easy,nonn",
    "offset": "1,1",
    "author": "_Eder Vanzei_, Jul 28 2021",
    "references": 1,
    "revision": 15,
    "time": "2022-07-04T10:06:58-04:00",
    "created": "2021-07-28T22:53:24-04:00"
}
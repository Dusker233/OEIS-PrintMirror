{
    "number": 355280,
    "data": "11,111,1100,1111,11000,11100,11111,110000,110011,111000,111100,111111,1100000,1100011,1100111,1110000,1110011,1111000,1111100,1111111,11000000,11000011,11000111,11001100,11001111,11100000,11100011,11100111,11110000,11110011,11111000,11111100,11111111",
    "name": "Binary numbers (digits in {0, 1}) with no run of digits with length < 2.",
    "comment": [
        "This is the binary representation of the terms in A033015.",
        "The sequence can be seen as a table where row r contains the terms with r digits. Then row r+1 is obtained by from the terms of row r by duplicating their last digit, and from those of row r-1 by appending twice the 1's complement of their last digit. This yields the row lengths given in FORMULA."
    ],
    "formula": [
        "a(n) = A007088(A033015(n)).",
        "The number of terms with n digits is Fibonacci(n-1); the largest such term is A000042(n) = A002275(n)."
    ],
    "example": [
        "There can't be a terms with only 1 digit, so the smallest term is a(1) = 11.",
        "The only 3-digit term is a(2) = 111, since in 100 the digit 1 is alone, and in 101 and 110 the digit 0 is alone.",
        "With four digits we must have either no or two digits 0 and they must be at the end (to avoid isolated '1's), i.e., a(3) = 1100 and a(4) = 1111."
    ],
    "program": [
        "(PARI) {is_A355280(n,d=digits(n))=vecmax(d)==1 && is_A033015(fromdigits(d,2))}",
        "A355280(n)=A007088(A033015(n))",
        "concat(apply( {A355280_row(n)=if(n>2, setunion([x*10+x%10|x<-A355280_row(n-1)],[x*100+11*(1-x%10)|x<-A355280_row(n-2)]), n>1, [11],[])}, [1..8])) \\\\ \"Row\" of n-digit terms. For (very) large n one should implement memoization instead of this naive recursion.",
        "(Python)",
        "def A355280_row(n): return [] if n<2 else [11] if n==2 else sorted(",
        "    [x*10+x%10 for x in A355280_row(n-1)] +",
        "    [x*100+11-x%10*11 for x in A355280_row(n-2)]) # _M. F. Hasler_, Oct 17 2022"
    ],
    "xref": [
        "Cf. A033015 (the same terms converted from base 2 to base 10),",
        "Subsequence of A007088 (the binary numbers); A000042 (numbers in base 1) = A002275 \\ {0} (repunits) are subsequences; A061851 is the subsequence of palindromes."
    ],
    "keyword": "nonn,base",
    "offset": "1,1",
    "author": "_M. F. Hasler_, Oct 17 2022",
    "references": 3,
    "revision": 17,
    "time": "2022-10-23T01:44:32-04:00",
    "created": "2022-10-23T01:44:32-04:00"
}
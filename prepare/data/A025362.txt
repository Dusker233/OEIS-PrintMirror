{
    "number": 25362,
    "data": "90,124,133,147,156,157,159,163,165,166,171,174,177,188,193,201,203,205,219,239,241,249,254,260,284,293,299,329,341,360,496,624,664,696,752,1016,1040,1136,1440,1984,2496,2656,2784,3008,4064,4160,4544,5760,7936",
    "name": "Numbers that are the sum of 4 nonzero squares in exactly 6 ways.",
    "link": [
        "Michael S. Branicky, <a href=\"/A025362/b025362.txt\">Table of n, a(n) for n = 1..100</a> (terms 67..73 from Chai Wah Wu and terms n = 1..66 from Robert Price)",
        "<a href=\"/index/Su#ssq\">Index entries for sequences related to sums of squares</a>"
    ],
    "program": [
        "(Python)",
        "limit = 8000",
        "from functools import lru_cache",
        "sq = [k**2 for k in range(1, int(limit**.5)+2) if k**2 + 3 <= limit]",
        "sqs = set(sq)",
        "@lru_cache(maxsize=None)",
        "def findsums(n, m):",
        "  if m == 1: return {(n, )} if n in sqs else set()",
        "  return set(tuple(sorted(t+(s,))) for s in sqs for t in findsums(n-s, m-1))",
        "print([n for n in range(4, limit+1) if len(findsums(n, 4)) == 6]) # _Michael S. Branicky_, Apr 20 2021"
    ],
    "xref": [
        "Cf. A025428, A025371 (at least 6 ways)."
    ],
    "keyword": "nonn",
    "offset": "1,1",
    "author": "_David W. Wilson_",
    "references": 4,
    "revision": 24,
    "time": "2021-04-20T16:49:59-04:00",
    "created": "1999-12-11T03:00:00-05:00"
}
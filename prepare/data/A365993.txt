{
    "number": 365993,
    "data": "34,1034,11094,129086,1590817,21075277,253919083,15701617319,199307878383,2229089415827,33269991281067",
    "name": "Trajectory of 34 under the \"multiply with zero\" rules explained in the Comments section.",
    "comment": [
        "The \"multiply with zero\" rules:",
        "- no term contains two or more zeros;",
        "- a(n) is the product of the two numbers separated by a 0 in a(n+1);",
        "- a(n+1) is always the smallest possible integer;",
        "- the sequence stops when two or more zeros cannot be avoided for a(n+1)."
    ],
    "link": [
        "Eric Angelini, <a href=\"https://cinquantesignes.blogspot.com/2023/09/multiply-with-zero.html\">Multiply with zero</a>, personal blog \"Cinquante signes\" Sept. 2023."
    ],
    "example": [
        "a(1) = 34",
        "a(2) = 1034 as 1*34 = 34, which is a(1). We do not assign 1702, 2017 or 3401 to a(2) as they are larger than 1034 (though they all \"produce\" 34);",
        "a(3) = 11094 as 11*94 = 1034, which is a(2). We do not assign 20517, 22047, 47022, 51702 or 94011 to a(3) as they are larger than 11094 (though they all \"produce\" 1034);",
        "a(4) = 129086 as 129*86 = 11094, which is a(3). We do not assign 184906, 205547, 258043, 303698, 369803, 430258, 554702, 601849 or 860129 to a(3) as they are larger than 129086 (though they all \"produce\" 11094).",
        "The last term of the trajectory is 33269991281067 as its divisors 1, 3, 17, 51, 652352770217, 1957058310651, 11089997093689 and 33269991281067 cannot produce a successor a(n+1) that contains fewer than two zeros."
    ],
    "program": [
        "(Python)",
        "from sympy import divisors",
        "def agen(k=34): # generator of terms starting at k",
        "    while True:",
        "        yield k",
        "        s = set()",
        "        for d in divisors(k, generator=True):",
        "            v, w = str(d), str(k//d)",
        "            if \"0\" not in v and \"0\" not in w:",
        "                s.add(int(v + \"0\" + w))",
        "        if len(s) == 0: return",
        "        k = min(s)",
        "print(list(agen())) # _Michael S. Branicky_, Sep 26 2023"
    ],
    "xref": [
        "Cf. A365994, A365260."
    ],
    "keyword": "base,nonn,fini,full,new",
    "offset": "1,1",
    "author": "_Eric Angelini_, Sep 25 2023",
    "references": 0,
    "revision": 11,
    "time": "2023-09-30T21:50:05-04:00",
    "created": "2023-09-30T21:50:05-04:00"
}
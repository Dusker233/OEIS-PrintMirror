{
    "number": 359234,
    "data": "1,5,85,1105,99905,2339285,294346585,29215971265,4274253515545,135890190846085,14289540733429585,10285257499051999685,659442750659021626765,386961420250791449193065,10019680253112694448155885,7190322949201929673798425205,944550762877225960238953138865",
    "name": "a(n) is the smallest centered square number with exactly n distinct prime factors.",
    "link": [
        "Eric Weisstein's World of Mathematics, <a href=\"http://mathworld.wolfram.com/CenteredSquareNumber.html\">Centered Square Number</a>",
        "Eric Weisstein's World of Mathematics, <a href=\"http://mathworld.wolfram.com/DistinctPrimeFactors.html\">Distinct Prime Factors</a>"
    ],
    "example": [
        "a(4) = 99905, because 99905 is a centered square number with 4 distinct prime factors {5, 13, 29, 53} and this is the smallest such number."
    ],
    "program": [
        "(PARI) a(n) = for(k=0, oo, my(t=2*k*k + 2*k + 1); if(omega(t) == n, return(t))); \\\\ _Daniel Suteu_, Dec 29 2022",
        "(PARI)",
        "omega_centered_square_numbers(A, B, n) = A=max(A, vecprod(primes(n))); (f(m, p, j) = my(list=List()); forprime(q=p, sqrtnint(B\\m, j), if(q%4==1, my(v=m*q, r=nextprime(q+1)); while(v <= B, if(j==1, if(v>=A, if (issquare((8*(v-1))/4 + 1) && ((sqrtint((8*(v-1))/4 + 1)-1)%2 == 0), listput(list, v))), if(v*r <= B, list=concat(list, f(v, r, j-1)))); v *= q))); list); vecsort(Vec(f(1, 2, n)));",
        "a(n) = if(n==0, return(1)); my(x=vecprod(primes(n)), y=2*x); while(1, my(v=omega_centered_square_numbers(x, y, n)); if(#v >= 1, return(v[1])); x=y+1; y=2*x); \\\\ _Daniel Suteu_, Dec 29 2022"
    ],
    "xref": [
        "Cf. A001221, A001844, A358894, A358928, A359235."
    ],
    "keyword": "nonn",
    "offset": "0,2",
    "author": "_Ilya Gutkovskiy_, Dec 22 2022",
    "ext": [
        "a(8) from _Jon E. Schoenfield_, Dec 23 2022",
        "a(9)-a(16) from _Daniel Suteu_, Dec 29 2022"
    ],
    "references": 1,
    "revision": 13,
    "time": "2022-12-29T11:34:15-05:00",
    "created": "2022-12-24T11:16:30-05:00"
}
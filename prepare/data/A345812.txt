{
    "number": 345812,
    "data": "721,754,756,782,792,797,806,808,819,834,847,848,850,860,871,874,876,877,878,881,884,886,893,902,903,907,909,910,916,917,918,921,929,932,933,936,937,938,941,942,944,945,955,965,966,968,973,991,994,999,1001",
    "name": "Numbers that are the sum of ten cubes in exactly ten ways.",
    "comment": [
        "Differs from A345558 at term 4 because 771 = 1^3 + 1^3 + 1^3 + 1^3 + 1^3 + 1^3 + 1^3 + 2^3 + 3^3 + 9^3  = 1^3 + 1^3 + 1^3 + 1^3 + 1^3 + 1^3 + 4^3 + 4^3 + 5^3 + 8^3  = 1^3 + 1^3 + 1^3 + 1^3 + 1^3 + 2^3 + 2^3 + 4^3 + 7^3 + 7^3  = 1^3 + 1^3 + 1^3 + 2^3 + 2^3 + 2^3 + 2^3 + 2^3 + 6^3 + 8^3  = 1^3 + 1^3 + 1^3 + 3^3 + 3^3 + 3^3 + 4^3 + 4^3 + 6^3 + 7^3  = 1^3 + 1^3 + 2^3 + 2^3 + 2^3 + 3^3 + 5^3 + 5^3 + 5^3 + 7^3  = 1^3 + 2^3 + 2^3 + 2^3 + 2^3 + 3^3 + 3^3 + 5^3 + 6^3 + 7^3  = 1^3 + 3^3 + 3^3 + 3^3 + 4^3 + 5^3 + 5^3 + 5^3 + 5^3 + 5^3  = 2^3 + 2^3 + 2^3 + 2^3 + 2^3 + 3^3 + 4^3 + 4^3 + 4^3 + 8^3  = 2^3 + 3^3 + 3^3 + 3^3 + 3^3 + 4^3 + 5^3 + 5^3 + 5^3 + 6^3  = 3^3 + 3^3 + 3^3 + 3^3 + 4^3 + 4^3 + 4^3 + 4^3 + 4^3 + 7^3.",
        "Likely finite."
    ],
    "link": [
        "Sean A. Irvine, <a href=\"/A345812/b345812.txt\">Table of n, a(n) for n = 1..72</a>"
    ],
    "example": [
        "754 is a term because 754 = 1^3 + 1^3 + 1^3 + 1^3 + 1^3 + 1^3 + 3^3 + 4^3 + 5^3 + 6^3 = 1^3 + 1^3 + 1^3 + 1^3 + 4^3 + 4^3 + 4^3 + 4^3 + 4^3 + 4^3 = 1^3 + 1^3 + 1^3 + 2^3 + 3^3 + 4^3 + 4^3 + 4^3 + 4^3 + 5^3 = 1^3 + 1^3 + 1^3 + 3^3 + 3^3 + 3^3 + 3^3 + 3^3 + 4^3 + 6^3 = 1^3 + 1^3 + 2^3 + 2^3 + 3^3 + 3^3 + 4^3 + 4^3 + 5^3 + 5^3 = 1^3 + 2^3 + 2^3 + 2^3 + 2^3 + 3^3 + 3^3 + 4^3 + 4^3 + 6^3 = 1^3 + 2^3 + 2^3 + 2^3 + 3^3 + 3^3 + 3^3 + 5^3 + 5^3 + 5^3 = 2^3 + 2^3 + 2^3 + 2^3 + 2^3 + 3^3 + 3^3 + 3^3 + 5^3 + 6^3 = 2^3 + 2^3 + 3^3 + 3^3 + 3^3 + 3^3 + 3^3 + 3^3 + 3^3 + 7^3 = 2^3 + 3^3 + 3^3 + 3^3 + 3^3 + 3^3 + 4^3 + 4^3 + 4^3 + 4^3."
    ],
    "program": [
        "(Python)",
        "from itertools import combinations_with_replacement as cwr",
        "from collections import defaultdict",
        "keep = defaultdict(lambda: 0)",
        "power_terms = [x**3 for x in range(1, 1000)]",
        "for pos in cwr(power_terms, 10):",
        "    tot = sum(pos)",
        "    keep[tot] += 1",
        "    rets = sorted([k for k, v in keep.items() if v == 10])",
        "    for x in range(len(rets)):",
        "        print(rets[x])"
    ],
    "xref": [
        "Cf. A345558, A345802, A345811, A345862."
    ],
    "keyword": "nonn",
    "offset": "1,1",
    "author": "_David Consiglio, Jr._, Jun 26 2021",
    "references": 5,
    "revision": 6,
    "time": "2021-07-31T22:27:44-04:00",
    "created": "2021-06-27T16:14:52-04:00"
}
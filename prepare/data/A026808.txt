{
    "number": 26808,
    "data": "0,1,2,3,4,7,8,11,12,15,16,21,22,25,28,31,32,37,38,43,46,49,50,59,60,63,66,71,72,81,82,87,90,93,96,105,106,109,112,121,122,131,132,137,142,145,146,159,160,165,168,173,174,183,186,195",
    "name": "a(n) is the number of products P of distinct positive integers satisfying P <= n.",
    "comment": [
        "The products must contain at least two integers. - _Sean A. Irvine_, Oct 13 2019"
    ],
    "link": [
        "Robert Israel, <a href=\"/A026808/b026808.txt\">Table of n, a(n) for n = 1..10000</a>",
        "Sean A. Irvine, <a href=\"https://github.com/archmageirvine/joeis/blob/master/src/irvine/oeis/a026/A026808.java\">Java program</a> (github)"
    ],
    "example": [
        "a(6) = 7 because the possible products are 1*2, 1*3, 1*4, 1*5, 1*6, 2*3, and 1*2*3. - _Sean A. Irvine_, Oct 13 2019"
    ],
    "maple": [
        "N:= 200: # for a(1)..a(N)",
        "with(queue):Q:= new():",
        "V:= Vector(N):",
        "for i from 1 to N/2 do",
        "  for j from i+1 to N while i*j <= N do",
        "    p:= i*j;",
        "    V[p]:= V[p]+1;",
        "    if p*(j+1) <= N then enqueue(Q,[i,j]) fi",
        "od od:",
        "while not empty(Q) do",
        "  s:= dequeue(Q);",
        "  p:= convert(s,`*`);",
        "  for k from s[-1]+1 to N while p*k <= N do",
        "     pp:= p*k;",
        "     V[pp]:= V[pp]+1;",
        "     if pp*(k+1) <= N then enqueue(Q,[op(s),k]) fi",
        "  od;",
        "od:",
        "ListTools:-PartialSums(convert(V,list)); # _Robert Israel_, Dec 09 2020"
    ],
    "xref": [
        "Partial sums of A254578."
    ],
    "keyword": "nonn",
    "offset": "1,3",
    "author": "_Clark Kimberling_",
    "references": 1,
    "revision": 15,
    "time": "2020-12-09T16:04:35-05:00",
    "created": "1999-12-11T03:00:00-05:00"
}
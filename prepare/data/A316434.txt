{
    "number": 316434,
    "data": "1,1,2,2,3,4,4,4,5,6,7,7,8,8,9,10,10,11,11,11,12,12,13,14,15,15,16,16,17,17,18,19,19,20,21,22,22,22,23,23,24,25,25,25,26,27,28,28,29,30,31,31,32,32,33,33,34,35,35,35,36,36,37,38,39,39,39,40,41,42,42,42,43,44,44",
    "name": "a(n) = a(pi(n)) + a(n-pi(n)) with a(1) = a(2) = 1.",
    "comment": [
        "This sequence hits every positive integer."
    ],
    "link": [
        "Robert Israel, <a href=\"/A316434/b316434.txt\">Table of n, a(n) for n = 1..10000</a>",
        "Altug Alkan, <a href=\"/A316434/a316434.png\">A plot of a(n)/n</a>",
        "Altug Alkan and Orhan Ozgur Aybar, <a href=\"https://doi.org/10.5539/ijsp.v7n6p149\"> On a Family of Sequences Related to Prime Counting Function</a>, International Journal of Statistics and Probability Vol. 7, No. 6; 2018.",
        "R\u00e9my Sigrist, <a href=\"/A316434/a316434.txt\">C++ program for A316434</a>"
    ],
    "formula": [
        "a(n) = a(A000720(n)) + a(A062298(n)) with a(1) = a(2) = 1.",
        "a(n+1) - a(n) = 0 or 1 for all n >= 1."
    ],
    "maple": [
        "f:= proc(n) option remember: local p;",
        "     p:= numtheory:-pi(n);",
        "     procname(p) + procname(n-p)",
        "end proc:",
        "f(1):= 1: f(2):= 1:",
        "map(f, [$1..100]); # _Robert Israel_, Jul 03 2018"
    ],
    "mathematica": [
        "a[1]=a[2]=1; a[n_] := a[n] = a[PrimePi[n]] + a[n - PrimePi[n]]; Array[a, 75] (* _Giovanni Resta_, Nov 02 2018 *)"
    ],
    "program": [
        "(PARI) q=vector(75); for(n=1, 2, q[n] = 1); for(n=3, #q, q[n] = q[primepi(n)] + q[n-primepi(n)]); q",
        "(C++) See Links section.",
        "(Python)",
        "from sympy import primepi",
        "def A316434(n):",
        "    pp = primepi(n)",
        "    return 1 if n == 1 or n == 2 else A316434(pp) + A316434(n-pp) # _Chai Wah Wu_, Nov 02 2018"
    ],
    "xref": [
        "Cf. A000720, A062298."
    ],
    "keyword": "nonn",
    "offset": "1,3",
    "author": "_Altug Alkan_, Jul 02 2018",
    "references": 5,
    "revision": 29,
    "time": "2018-11-02T14:58:00-04:00",
    "created": "2018-07-03T03:24:22-04:00"
}
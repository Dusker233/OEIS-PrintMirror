{
    "number": 61051,
    "data": "0,225,40401,2042041,317231721,16198161984,3921203921209,400000040000001,23391004233910041,1100298301100298304,141162631214116263129,1322314049613223140496,3171326702963171326702969,107786983188610778698318864,29726516052320297265160523209,1003781781031081003781781031081",
    "name": "Smallest square of the form [n digits][same n digits][further digits].",
    "comment": [
        "a(n) <= (2*10^n+1)^2. This bound is tight for n = 2, 7. Are there other values of n for which this bound is tight? For n = 11, there are no [further digits] block, i.e. the smallest square has 2n digits. This is true for all n in A086982. For instance, a(21) = 183673469387755102041183673469387755102041, a(33) = 132231404958677685950413223140496132231404958677685950413223140496. - _Chai Wah Wu_, Mar 25 2020"
    ],
    "link": [
        "Chai Wah Wu, <a href=\"/A061051/b061051.txt\">Table of n, a(n) for n = 0..37</a>"
    ],
    "example": [
        "40401 is the first square to have the first two digits the same as the next two digits"
    ],
    "program": [
        "(Python)",
        "from sympy import integer_nthroot",
        "def A061051(n):",
        "    if n == 0:",
        "        return 0",
        "    nstart = 10**(n-1)",
        "    nend = 10*nstart",
        "    for i in range(nstart,nend):",
        "        k = int(str(i)*2)",
        "        if integer_nthroot(k,2)[1]:",
        "            return k",
        "    for i in range(nstart,nend):",
        "        si = str(i)*2",
        "        for sj in '014569':",
        "            k = int(si+sj)",
        "            if integer_nthroot(k,2)[1]:",
        "                return k # _Chai Wah Wu_, Mar 25 2020"
    ],
    "xref": [
        "Cf. A086982."
    ],
    "keyword": "base,nonn",
    "offset": "0,2",
    "author": "_Erich Friedman_, May 26 2001",
    "ext": [
        "One more term from _Vladeta Jovovic_, Jun 02 2001",
        "a(7)-a(15) from _Chai Wah Wu_, Mar 25 2020"
    ],
    "references": 1,
    "revision": 32,
    "time": "2020-03-27T02:11:37-04:00",
    "created": "2003-05-16T03:00:00-04:00"
}
{
    "number": 50445,
    "data": "2,211,223,2003,2027,2203,2221,2000000000003,2000000000203,2000000002001,2000000002003,2000000002223,2000000000000000000000000000000000041,2000000000000000000000000000000000429,2000000000000000000000000000000000653",
    "name": "Each prime appears later in alphabetical order (in American English) than the one before.",
    "comment": [
        "From _Michael S. Branicky_, Aug 17 2022: (Start)",
        "As in the companion sequence A050444, spaces, hypens and the word \"and\" are not included in the comparisons.",
        "In extending the sequence to large numbers, the \"American system\" (Weisstein link), also known as the \"short scale\" (Wikipedia link), was used.",
        "The highest term is a(38) = 2*10^63 + 2*10^36 + 2*10^12 + 2202 (\"two vigintillion two undecillion two trillion two thousand two hundred ninety three\"). See b-file and link to US English names of terms. (End)"
    ],
    "link": [
        "Michael S. Branicky, <a href=\"/A050445/b050445.txt\">Table of n, a(n) for n = 1..38</a>",
        "Michael S. Branicky, <a href=\"/A050445/a050445.txt\">US English names of terms</a>",
        "Eric Weisstein's World of Mathematics, <a href=\"https://mathworld.wolfram.com/LargeNumber.html\">Large Number</a>",
        "Wikipedia, <a href=\"https://en.wikipedia.org/wiki/Names_of_large_numbers\">Names of Large Numbers</a>",
        "Wiktionary, <a href=\"https://en.wiktionary.org/wiki/one_hundred_one\">one hundred one</a> (US)",
        "Wiktionary, <a href=\"https://en.wiktionary.org/wiki/one_hundred_and_one\">one hundred and one</a> (UK)"
    ],
    "example": [
        "Prime 2 (\"two\") is followed in alphabetic order first by prime 211 (\"two hundred eleven\")."
    ],
    "program": [
        "(Python)",
        "from sympy import isprime",
        "from num2words import num2words",
        "def n2w(n): return num2words(n).replace(\" and\", \"\").replace(chr(44), \"\").replace(chr(32), \"\").replace(\"-\", \"\")",
        "def afind(limit, start=2):",
        "    alst, last, t = [], start-1, start",
        "    while t <= limit:",
        "        target = n2w(last)",
        "        while not isprime(t) or n2w(t) <= target:",
        "            t += 1",
        "            if t > limit: return alst",
        "        last = t; alst.append(t)",
        "    return alst",
        "print(afind(3000)) # _Michael S. Branicky_, Aug 17 2022"
    ],
    "xref": [
        "Cf. A050444, A180301."
    ],
    "keyword": "base,fini,full,nonn,word",
    "offset": "1,1",
    "author": "Michael Lugo (mlugo(AT)thelabelguy.com), Dec 23 1999",
    "ext": [
        "If you accept \"vigintillion\" as a name for 10^63 then there are more terms.",
        "Offset changed, a(4) inserted and a(8) and beyond from _Michael S. Branicky_, Aug 17 2022"
    ],
    "references": 2,
    "revision": 12,
    "time": "2022-08-17T22:29:46-04:00",
    "created": "2000-05-08T03:00:00-04:00"
}
{
    "number": 365253,
    "data": "1,2,4,8,14,26,48,86,156,282,506,910,1638,2936,5276,9482,17012,30542,54838,98440,176726,317268,569516,1022368,1835320,3294596,5914262,10616932,19058674,34212776,61416376,110250050,197912878,355278872",
    "name": "Number of (3+)-free binary strings of length n.",
    "comment": [
        "A string is (3+)-free if it contains no block of the form xxxa, where a is the first letter of x."
    ],
    "link": [
        "G. Badkobeh and M. Crochemore, <a href=\"http://dx.doi.org/10.1016/j.ipl.2015.01.004\">Infinite binary words containing repetitions of odd period</a>, Info. Proc. Letters 115 (2015) 543-547."
    ],
    "program": [
        "(Python)",
        "from itertools import product",
        "def f(s): # (3+)-free",
        "    for l in range(1, (len(s)-1)//3 + 1):",
        "      for i in range(len(s) - 3*l):",
        "          if s[i:i+l] == s[i+l:i+2*l] == s[i+2*l:i+3*l] and s[i]==s[i+3*l]:",
        "             return False",
        "    return True",
        "def a(n):",
        "    if n == 0: return 1",
        "    return 2*sum(1 for w in product(\"01\", repeat=n-1) if f(\"0\"+\"\".join(w)))",
        "print([a(n) for n in range(16)]) # _Michael S. Branicky_, Aug 29 2023",
        "(Python) # faster, but > memory, for initial segment of sequence",
        "from itertools import islice",
        "def incf(s): # incrementally (3+)-free",
        "    for l in range(1, (len(s)-1)//3 + 1):",
        "        if s[-3*l-1:-2*l-1]==s[-2*l-1:-l-1]==s[-l-1:-1] and s[-3*l-1]==s[-1]:",
        "            return False",
        "    return True",
        "def agen():",
        "    yield 1",
        "    F = set(\"0\")",
        "    while True:",
        "        yield 2*len(F)",
        "        Fnew = set(c+i for c in F for i in \"01\" if incf(c+i))",
        "        F = Fnew",
        "print(list(islice(agen(),21))) # _Michael S. Branicky_, Aug 29 2023",
        "(Python)",
        "from re import compile",
        "def A365253(n):",
        "    if n == 0: return 1",
        "    r = compile(r'(.)(.*)\\1\\2\\1\\2\\1')",
        "    return 2*sum(not r.search(format(k,f'0{n}b')) for k in range(2**(n-1))) # _Pontus von Br\u00f6mssen_, Aug 29 2023"
    ],
    "xref": [
        "Cf. A028445."
    ],
    "keyword": "nonn,more,new",
    "offset": "0,2",
    "author": "_Jeffrey Shallit_, Aug 29 2023",
    "ext": [
        "a(29)-a(33) from _Michael S. Branicky_, Aug 29 2023"
    ],
    "references": 0,
    "revision": 12,
    "time": "2023-08-30T20:43:23-04:00",
    "created": "2023-08-30T20:43:23-04:00"
}
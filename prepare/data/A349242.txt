{
    "number": 349242,
    "data": "40,56,84,88,104,132,136,152,156,184,198,204,220,228,232,234,248,260,276,296,297,306,328,340,342,344,348,351,372,376,380,414,424,444,459,460,472,476,488,492,510,513,516,522,532,536,558,564,568,570,580",
    "name": "Numbers N = pqrs such that |pqr - s| < |ps - qr|, where p <= q <= r <= s are the 4 prime factors of N.",
    "comment": [
        "The set A014613 of numbers n with bigomega(n) = A001222(n) = 4, can be partitioned in these here (of \"cis\" type), and their complement A349241, those of \"trans\" type; see the math-fun post in LINKS for this suggested terminology.",
        "Within the 4-almost primes below 10^k, k = 2, 3, ...,8, we have (92, 1215, 13784, 148834, 1559299, 16089405, ...) of cis type, more than twice as much as those of trans type."
    ],
    "link": [
        "Marc LeBrun, <a href=\"https://mailman.xmission.com/hyperkitty/list/math-fun@mailman.xmission.com/message/PTOR2R5FAKLHLW6M2HKKXNXDHTQ4VIUR/\">four factor fun</a>, math-fun mailing list (available for subscribers only), Nov 10 2021"
    ],
    "formula": [
        "{ N in A014613 | |g - N/g| < |sg - N/sg| }, where g = gpf(N) = A006530(N) is the greatest, and s = spf(N) = A020639(N) is the smallest prime factor."
    ],
    "example": [
        "The first three 4-almost primes 16 = 2^4, 24 = 2^3*3 and 36 = 2^2*3^2 are not in this sequence, because the factorization u*v with closest possible factors u and v consists of choosing both, u and v, to be semiprimes (namely, 4*4, 4*6 and 6*6).",
        "The 4-almost prime 40 = 2^3*5 is in this sequence because the factorization 40 = u*v with u = 2^3, v = 5 has closer factors (distance 8 - 5 = 3) than u = 2*2, v = 2*5 (distance 10 - 4 = 6)."
    ],
    "program": [
        "(PARI) select( {is_A349242(n,a(u)=abs(u-n\\u))=bigomega(n)==4 && a((s=factor(n)[,1])[#s])<a(s[1]*s[#s])}, [1..1000])",
        "(Python)",
        "from itertools import chain",
        "from sympy import factorint",
        "def expand(n):",
        "    return list(chain.from_iterable([[i[0] for j in range(i[1])] for i in factorint(n).items()]))",
        "def is_ok(p,q,r,s):",
        "    return abs(p*q*r - s)<abs(p*s-q*r)",
        "print([i for i in range(2, 1000) if len(expand(i)) == 4 and is_ok(*expand(i))]) #_Gleb Ivanov_, Nov 12 2021"
    ],
    "xref": [
        "Cf. A014613, A349241, A006530, A020639."
    ],
    "keyword": "nonn",
    "offset": "1,1",
    "author": "_M. F. Hasler_, Nov 12 2021",
    "references": 1,
    "revision": 12,
    "time": "2021-11-14T03:30:50-05:00",
    "created": "2021-11-14T03:30:50-05:00"
}
{
    "number": 271639,
    "data": "648,649,659,737,738,739,747,748,749,758,759,769,828,829,837,838,839,846,847,848,849,857,858,859,868,869,879,919,928,929,937,938,939,946,947,948,949,956,957,958,959,967,968,969,978,979,989",
    "name": "Orphans: integers without ancestors, in the sense explained below.",
    "comment": [
        "Look at",
        "2.0.1.6",
        ".2.1.5",
        "We see that 2016 produces 215 if we consider the successive absolute differences of 2016's digits. We call 2016 an \"ancestor\" of 215. Some integers have many ancestors -- 215 has 28, for example -- and some, the \"orphans\", have none. The smallest is 648, which is therefore the initial term.",
        "Also numbers that do not appear in A040115. - _R\u00e9my Sigrist_, Jun 10 2017",
        "If n is in the sequence, then so are all numbers that start or end with n or are obtained from n by inserting zeros. - _Robert Israel_, May 27 2019",
        "Eventually almost all numbers are orphans, because there are some impossible substrings, like 919, and any number containing the bad substring is also an orphan. And the fraction of numbers containing any single substring rises asymptotically to 1 (albeit usually slowly). - _Allan C. Wechsler_, Oct 31 2019."
    ],
    "link": [
        "Robert Israel, <a href=\"/A271639/b271639.txt\">Table of n, a(n) for n = 1..10000</a>"
    ],
    "maple": [
        "filter:= proc(n) local t,L,i;",
        "     L:= convert(n,base,10);",
        "     t:= {$1..9};",
        "     for i from 1 to nops(L) do",
        "       t:= select(d -> d >= 0 and d <= 9, map(d -> (d+L[i],d-L[i]), t));",
        "       if t = {} then return true fi",
        "     od;",
        "false",
        "end proc:",
        "select(filter, [$1..2000]); # _Robert Israel_, May 27 2019"
    ],
    "xref": [
        "Cf. A040115."
    ],
    "keyword": "nonn,base",
    "offset": "1,1",
    "author": "_Eric Angelini_ and _Jean-Marc Falcoz_, Apr 11 2016",
    "references": 3,
    "revision": 29,
    "time": "2019-10-31T23:40:04-04:00",
    "created": "2016-04-11T21:27:18-04:00"
}
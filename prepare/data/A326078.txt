{
    "number": 326078,
    "data": "1,1,2,4,8,16,24,48,72,144,216,432,552,1104,1656,2592,3936,7872,10056,20112,26688,42320,63480,126960,154800,309600,464400,737568,992160,1984320,2450880,4901760,6292800,10197312,15295968,26241696,32947488,65894976,98842464,161587872,205842528",
    "name": "Number of subsets of {2..n} containing all of their integer quotients > 1.",
    "comment": [
        "These sets are closed under taking the quotient of two distinct divisible terms."
    ],
    "formula": [
        "For n > 0, a(n) = A326023(n) - 1.",
        "For n > 0, a(n) = A326079(n)/2."
    ],
    "example": [
        "The a(6) = 24 subsets:",
        "  {}  {2}  {2,3}  {2,3,4}  {2,3,4,5}  {2,3,4,5,6}",
        "      {3}  {2,4}  {2,3,5}  {2,3,4,6}",
        "      {4}  {2,5}  {2,3,6}  {2,3,5,6}",
        "      {5}  {3,4}  {2,4,5}",
        "      {6}  {3,5}  {3,4,5}",
        "           {4,5}  {4,5,6}",
        "           {4,6}",
        "           {5,6}"
    ],
    "mathematica": [
        "Table[Length[Select[Subsets[Range[2,n]],SubsetQ[#,Divide@@@Select[Tuples[#,2],UnsameQ@@#&&Divisible@@#&]]&]],{n,0,10}]"
    ],
    "program": [
        "(PARI)",
        "a(n)={",
        "    my(lim=vector(n, k, sqrtint(k)));",
        "    my(accept(b, k)=for(i=2, lim[k], if(k%i ==0 && bittest(b,i) != bittest(b,k/i), return(0))); 1);",
        "    my(recurse(k, b)=",
        "      my(m=1);",
        "      for(j=max(2*k,n\\2+1), min(2*k+1,n), if(accept(b,j), m*=2));",
        "      k++;",
        "      m*if(k > n\\2, 1, (self()(k, b) + if(accept(b, k), self()(k, b + (1<<k)))))",
        "   );",
        "   recurse(1, 0);",
        "} \\\\ _Andrew Howroyd_, Aug 30 2019"
    ],
    "xref": [
        "Cf. A007865, A051026, A054519, A067992, A103580, A325860, A325994, A326023, A326076, A326079, A326081."
    ],
    "keyword": "nonn",
    "offset": "0,3",
    "author": "_Gus Wiseman_, Jun 05 2019",
    "ext": [
        "Terms a(21) and beyond from _Andrew Howroyd_, Aug 30 2019"
    ],
    "references": 8,
    "revision": 11,
    "time": "2019-08-30T21:47:06-04:00",
    "created": "2019-06-07T07:45:29-04:00"
}
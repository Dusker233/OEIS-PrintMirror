{
    "number": 51042,
    "data": "1,3,9,24,66,180,486,1314,3558,9606,25956,70134,189462,511866,1382880,3735888,10092762,27266340,73661610,199001490,537615066,1452399978,3923748270",
    "name": "Number of ternary cubefree words of length n.",
    "link": [
        "A. M. Shur, <a href=\"http://dx.doi.org/10.1016/j.cosrev.2012.09.001\">Growth properties of power-free languages</a>, Computer Science Review, Vol. 6 (2012), 187-208.",
        "A. M. Shur, <a href=\"http://arxiv.org/abs/1009.4415\">Numerical values of the growth rates of power-free languages</a>, arXiv:1009.4415 [cs.FL], 2010.",
        "Eric Weisstein's World of Mathematics, <a href=\"http://mathworld.wolfram.com/CubefreeWord.html\">Cubefree Word.</a>"
    ],
    "formula": [
        "Let L = lim a(n)^(1/n); then L exists since a(n) is submultiplicative. 2.7015614 < L < 2.7015616 (Shur 2012); the gap between the bounds can be made less than any given constant. - _Arseny Shur_, Apr 27 2015"
    ],
    "example": [
        "There are 81 ternary words of length 4. Five of them contain the cube 000: 0000, 0001, 0002, 1000, 2000; same for 111 and 222. So, a(4)=81-3*5=66. - _Arseny Shur_, Apr 27 2015"
    ],
    "program": [
        "(Python)",
        "from itertools import product",
        "def cf(s):",
        "  for l in range(1, len(s)//3 + 1):",
        "    for i in range(len(s) - 3*l + 1):",
        "      if s[i:i+l]*2 == s[i+l:i+3*l]: return False",
        "  return True",
        "def a(n):",
        "  if n == 0: return 1",
        "  return 3*sum(cf(\"0\"+\"\".join(w)) for w in product(\"012\", repeat=n-1))",
        "print([a(n) for n in range(14)]) # _Michael S. Branicky_, Apr 16 2021"
    ],
    "xref": [
        "Cf. A028445."
    ],
    "keyword": "nonn",
    "offset": "0,2",
    "author": "_Eric W. Weisstein_",
    "ext": [
        "More terms from _Sascha Kurz_, Mar 22 2002",
        "a(19)-a(22) from _Michael S. Branicky_, Apr 16 2021"
    ],
    "references": 3,
    "revision": 30,
    "time": "2021-04-18T10:08:28-04:00",
    "created": "1999-12-11T03:00:00-05:00"
}
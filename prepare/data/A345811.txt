{
    "number": 345811,
    "data": "632,651,658,688,695,714,736,740,745,752,773,778,780,790,795,799,801,812,813,815,816,818,821,823,825,841,843,849,851,852,853,855,856,857,858,864,866,873,880,882,883,885,890,891,892,899,905,908,913,922,924,926",
    "name": "Numbers that are the sum of ten cubes in exactly nine ways.",
    "comment": [
        "Differs from A345557 at term 7 because 721 = 1^3 + 1^3 + 1^3 + 1^3 + 1^3 + 5^3 + 5^3 + 5^3 + 5^3 + 6^3  = 1^3 + 1^3 + 1^3 + 1^3 + 2^3 + 3^3 + 5^3 + 5^3 + 6^3 + 6^3  = 1^3 + 1^3 + 1^3 + 2^3 + 2^3 + 3^3 + 3^3 + 6^3 + 6^3 + 6^3  = 1^3 + 1^3 + 2^3 + 2^3 + 2^3 + 2^3 + 4^3 + 4^3 + 6^3 + 7^3  = 1^3 + 1^3 + 2^3 + 3^3 + 3^3 + 3^3 + 3^3 + 3^3 + 4^3 + 8^3  = 1^3 + 1^3 + 3^3 + 4^3 + 4^3 + 4^3 + 5^3 + 5^3 + 5^3 + 5^3  = 1^3 + 2^3 + 3^3 + 3^3 + 4^3 + 4^3 + 4^3 + 5^3 + 5^3 + 6^3  = 2^3 + 2^3 + 2^3 + 2^3 + 4^3 + 5^3 + 5^3 + 5^3 + 5^3 + 5^3  = 2^3 + 2^3 + 3^3 + 3^3 + 3^3 + 4^3 + 4^3 + 4^3 + 6^3 + 6^3  = 3^3 + 3^3 + 3^3 + 3^3 + 3^3 + 3^3 + 3^3 + 4^3 + 5^3 + 7^3.",
        "Likely finite."
    ],
    "link": [
        "Sean A. Irvine, <a href=\"/A345811/b345811.txt\">Table of n, a(n) for n = 1..79</a>"
    ],
    "example": [
        "651 is a term because 651 = 1^3 + 1^3 + 1^3 + 1^3 + 2^3 + 2^3 + 2^3 + 3^3 + 5^3 + 6^3 = 1^3 + 1^3 + 1^3 + 1^3 + 3^3 + 3^3 + 3^3 + 3^3 + 3^3 + 7^3 = 1^3 + 1^3 + 1^3 + 3^3 + 3^3 + 3^3 + 3^3 + 4^3 + 4^3 + 5^3 = 1^3 + 1^3 + 2^3 + 2^3 + 2^3 + 4^3 + 4^3 + 4^3 + 4^3 + 4^3 = 1^3 + 1^3 + 2^3 + 3^3 + 3^3 + 3^3 + 3^3 + 3^3 + 5^3 + 5^3 = 1^3 + 2^3 + 2^3 + 2^3 + 2^3 + 3^3 + 4^3 + 4^3 + 4^3 + 5^3 = 1^3 + 2^3 + 2^3 + 2^3 + 3^3 + 3^3 + 3^3 + 3^3 + 3^3 + 6^3 = 2^3 + 2^3 + 2^3 + 2^3 + 2^3 + 3^3 + 3^3 + 4^3 + 5^3 + 5^3 = 3^3 + 3^3 + 3^3 + 3^3 + 3^3 + 3^3 + 3^3 + 3^3 + 4^3 + 4^3."
    ],
    "program": [
        "(Python)",
        "from itertools import combinations_with_replacement as cwr",
        "from collections import defaultdict",
        "keep = defaultdict(lambda: 0)",
        "power_terms = [x**3 for x in range(1, 1000)]",
        "for pos in cwr(power_terms, 10):",
        "    tot = sum(pos)",
        "    keep[tot] += 1",
        "    rets = sorted([k for k, v in keep.items() if v == 9])",
        "    for x in range(len(rets)):",
        "        print(rets[x])"
    ],
    "xref": [
        "Cf. A345557, A345801, A345810, A345812, A345861."
    ],
    "keyword": "nonn",
    "offset": "1,1",
    "author": "_David Consiglio, Jr._, Jun 26 2021",
    "references": 6,
    "revision": 6,
    "time": "2021-07-31T22:27:38-04:00",
    "created": "2021-06-27T16:14:15-04:00"
}
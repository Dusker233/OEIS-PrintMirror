{
    "number": 158652,
    "data": "1,2,3,4,7,41,43,47,49,83,85,89,202,302,303,411,412,502,503,830,2020,2021,2023,2025,2029,2030,2032,3020,3021,4111,4112,5020,5021,6111,6112,9202,9203,20202,30202,30203,41111,41112,50202,50203,83020,202020",
    "name": "Any two consecutive digits in the sequence sum up to a prime.",
    "comment": [
        "a(1)=1 and a(n) is always the smallest integer > a(n-1) not leading to a contradiction. Terms computed by _M. F. Hasler_.",
        "From _M. F. Hasler_, Mar 24 2009: (Start)",
        "After the initial 2,3,4,7,41,43,47,49,83,85,89, the following pattern repeats:",
        "202,302,303,",
        "411,412,502,503,830,",
        "2020,2021,2023,2025,2029,2030,2032,3020,3021,",
        "4111,4112,5020,5021,6111,6112,9202,9203,",
        "with each time two extra digits (either 02 or 11):",
        "20202,30202,30203,",
        "41111,41112,50202,50203,83020,",
        "202020,202021,202023,202025,202029,202030,202032,302020,302021,",
        "411111,411112,502020,502021,611111,611112,920202,920203,",
        "and so on. (End)"
    ],
    "link": [
        "Robert G. Wilson v, <a href=\"/A158652/b158652.txt\">Table of n, a(n) for n=1..100 </a>",
        "Eric Angelini, <a href=\"http://www.cetteadressecomportecinquantesignes.com/ConsecDig.htm\">Chiffres consecutifs dans quelques suites</a>",
        "Eric Angelini, <a href=\"/A152136/a152136.pdf\">Chiffres consecutifs dans quelques suites</a> [Cached copy, with permission]"
    ],
    "mathematica": [
        "f[s_List] := Block[{k = s[[ -1]] + 1, ls = Mod[ s[[ -1]], 10]}, While[ Union@ PrimeQ[ Plus @@@ Partition[ Join[{ls}, IntegerDigits@ k], 2, 1]] != {True}, k++ ]; Append[s, k]]; Nest[f, {1}, 45] (* _Robert G. Wilson v_, Apr 05 2009 *)"
    ],
    "program": [
        "(Python)",
        "from itertools import count, islice",
        "allowed = {\"0\":\"2357\", \"1\":\"1246\", \"2\":\"01359\", \"3\":\"0248\", \"4\":\"1379\", \"5\":\"0268\", \"6\":\"157\", \"7\":\"046\", \"8\":\"359\", \"9\":\"248\"}",
        "def cgen(seed, digits, geq=\"0\"): # numbers satisfying the condition",
        "    if digits == 1:",
        "        yield from (c for c in allowed[seed] if c >= geq); return",
        "    for f in (c for c in allowed[seed] if c >= geq):",
        "        yield from (f + r for r in cgen(f, digits-1))",
        "def nextc(k): # next element of cgen greater than k",
        "    s = str(k)",
        "    for d in count(len(s)):",
        "        geq = s[0] if d == len(s) else \"1\"",
        "        for c in map(int, cgen(s[-1], d, geq=geq)):",
        "            if c > k: return c",
        "def agen():",
        "    an = 1",
        "    for n in count(1): yield an; an = nextc(an)",
        "print(list(islice(agen(), 40))) # _Michael S. Branicky_, Jul 12 2022"
    ],
    "xref": [
        "Cf. A152603-A152610."
    ],
    "keyword": "base,nonn",
    "offset": "1,2",
    "author": "_Eric Angelini_, Mar 23 2009",
    "references": 10,
    "revision": 18,
    "time": "2022-07-13T02:08:28-04:00",
    "created": "2010-06-01T03:00:00-04:00"
}
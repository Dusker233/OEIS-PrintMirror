{
    "number": 359223,
    "data": "1,21,2221,4221,243221,2224233221,422422333221,24322432433221,2224233224232224333221,42242233322422234224433221,243224324332244223243234333221,22242332242322243332343223222423222324433221,42242233322422234224432223242332234224222342232234333221",
    "name": "A \"look-and-say\" sequence. Describe the previous term by overstating the digit count by 1. a(1) = 1.",
    "comment": [
        "The method mirrors that of the classic A005150 method A, with this modification: 1 is added to the true frequency, followed by digit-indication. The initial term is 1, and in our description for the next term we overstate by 1 how many 1's we see: \"two 1's\", that is 21."
    ],
    "link": [
        "Michael De Vlieger, <a href=\"/A359223/b359223.txt\">Table of n, a(n) for n = 1..23</a>"
    ],
    "example": [
        "Looking at a(3) = 2221 we see three 2's and one 1, but we overstate these counts by 1, saying \"four 2's, two 1's\", therefore a(4) = 4221."
    ],
    "mathematica": [
        "NestList[FromDigits@ Flatten@ Map[Join[IntegerDigits[#2 + 1], IntegerDigits[#1]] & @@ # &, Apply[Join, Tally /@ SplitBy[IntegerDigits[#]]]] &, 1, 12] (* _Michael De Vlieger_, Dec 29 2022 *)"
    ],
    "program": [
        "(Python)",
        "from itertools import accumulate, groupby, islice, repeat",
        "def LL(s, _): return \"\".join(str(len(list(g))+1)+k for k, g in groupby(s))",
        "def agen(): yield from map(int, accumulate(repeat(\"1\"), LL))",
        "print(list(islice(agen(), 13))) # _Michael S. Branicky_, Dec 24 2022"
    ],
    "xref": [
        "Cf. A005150, A022472 (number of 2's in a(n))."
    ],
    "keyword": "nonn,base",
    "offset": "1,2",
    "author": "_Tamas Sandor Nagy_, Dec 21 2022",
    "references": 1,
    "revision": 28,
    "time": "2022-12-29T15:11:51-05:00",
    "created": "2022-12-29T11:31:35-05:00"
}
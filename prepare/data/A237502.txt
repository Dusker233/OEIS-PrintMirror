{
    "number": 237502,
    "data": "2,6,8,16,26,46,72,116,184,288,434,646,980,1444,2122,3066,4500,6452,9362,13294",
    "name": "Number of binary strings of length 2n which contain the ones' complements and the reversals of each of their two halves.",
    "link": [
        "Michael S. Branicky, <a href=\"/A237502/a237502.py.txt\">Python program</a>"
    ],
    "example": [
        "The two halves of 1000111000 are 10001 and 11000. Their reversals are 10001 and 00011, and their complements are 01110 and 00111 and all are substrings of 1000111000. Since there are 25 other strings of length 2*5 with this property, a(5) = 26."
    ],
    "mathematica": [
        "sQ[L_, {s__}] := MatchQ[L, {___, s, ___}]; a[n_] := Length@ Select[ Tuples[{0, 1}, 2*n], sQ[#, Reverse[Take[#, n]]] && sQ[#, Reverse[Take[#, -n ]]] && sQ[#, 1 - Take[#, n]] && sQ[#, 1 - Take[#, -n]] &]; Array[a, 8]"
    ],
    "program": [
        "(Python) # see link for faster version",
        "from itertools import product as prod",
        "def comp(s): z, o = ord('0'), ord('1'); return s.translate({z:o, o:z})",
        "def ok(s):",
        "  a, b = s[len(s)//2:], s[:len(s)//2]",
        "  return comp(a) in s and comp(b) in s and a[::-1] in s and b[::-1] in s",
        "def a(n): return 2*sum(ok(\"0\"+\"\".join(p)) for p in prod(\"01\", repeat=2*n-1))",
        "print([a(n) for n in range(1, 12)]) # _Michael S. Branicky_, Feb 06 2021"
    ],
    "xref": [
        "Cf. A237500, A237501."
    ],
    "keyword": "nonn,more",
    "offset": "1,1",
    "author": "_Giovanni Resta_, Feb 08 2014",
    "references": 3,
    "revision": 11,
    "time": "2021-02-07T21:11:06-05:00",
    "created": "2014-02-08T22:05:50-05:00"
}
{
    "number": 46408,
    "data": "6,22,33,55,77,202,262,303,393,505,626,707,939,1111,1441,1661,1991,3443,3883,7997,13231,15251,18281,19291,20602,22622,22822,24842,26662,28682,30903,31613,33933,35653,37673,38683,39993,60206,60406,60806,62026,64646,64846",
    "name": "Palindromes with exactly 2 distinct palindromic prime factors.",
    "link": [
        "Michael S. Branicky, <a href=\"/A046408/b046408.txt\">Table of n, a(n) for n = 1..10000</a>"
    ],
    "mathematica": [
        "Select[Range[65000],PalindromeQ[#]&&Total[Boole[PalindromeQ/@ FactorInteger[ #][[All,1]]]]==2&&PrimeOmega[#]==2&] (* _Harvey P. Dale_, Aug 07 2021 *)"
    ],
    "program": [
        "(Python)",
        "from sympy import factorint",
        "from itertools import product",
        "def ispal(n): s = str(n); return s == s[::-1]",
        "def pals(d, base=10): # all d-digit palindromes",
        "    digits = \"\".join(str(i) for i in range(base))",
        "    for p in product(digits, repeat=d//2):",
        "        if d > 1 and p[0] == \"0\": continue",
        "        left = \"\".join(p); right = left[::-1]",
        "        for mid in [[\"\"], digits][d%2]: yield int(left + mid + right)",
        "def ok(pal):",
        "    f = factorint(pal)",
        "    return len(f) == 2 and sum(f.values()) == 2 and all(ispal(p) for p in f)",
        "print(list(filter(ok, (p for d in range(1, 6) for p in pals(d) if ok(p))))) # _Michael S. Branicky_, Jun 22 2021",
        "(PARI) ispal(n) = my(d=digits(n)); d == Vecrev(d) \\\\ A002113",
        "for(k=1, 1e5, if(ispal(k)&&bigomega(k)==2,a=divisors(k); if(#a==4&&ispal(a[2])&&ispal(a[3]), print1(k,\", \")))) \\\\ _Alexandru Petrescu_, Aug 14 2022"
    ],
    "xref": [
        "Cf. A046328, A046376."
    ],
    "keyword": "nonn,base",
    "offset": "1,1",
    "author": "_Patrick De Geest_, Jun 15 1998",
    "ext": [
        "a(41) and beyond from _Michael S. Branicky_, Jun 22 2021"
    ],
    "references": 4,
    "revision": 31,
    "time": "2022-09-11T09:31:47-04:00",
    "created": "1999-12-11T03:00:00-05:00"
}
{
    "number": 346137,
    "data": "18,36,41,46,54,58,60,72,75,76,81,82,84,87,88,90,92,96,100,108,114,116,120,123,126,132,134,138,140,142,144,145,150,152,156,159,160,162,164,168,170,171,174,176,178,180,184,185,186,189,190,192,198,200,201,202,203",
    "name": "Numbers k such that k^3 = x^3 + y^3 + z^3, x > y > z >= 0, has at least 2 distinct solutions.",
    "comment": [
        "This sequence is based on a generalization of Fermat's last theorem with n=3, in which three terms are added. Fermat's Theorem states that there are no solution with only two terms, this sequence shows there are many integers for which there are multiple solutions if three terms are allowed. The sequence is also related to the Taxicab numbers."
    ],
    "example": [
        "41 is in the sequence because 41^3 = 33^3 + 32^3 + 6^3 = 40^3 + 17^3 + 2^3."
    ],
    "mathematica": [
        "q[k_] := Count[IntegerPartitions[k^3, {3}, Range[0, k-1]^3], _?(UnsameQ @@ # &)] > 1; Select[Range[200], q] (* _Amiram Eldar_, Sep 03 2021 *)"
    ],
    "program": [
        "(Python)",
        "from itertools import combinations",
        "from collections import Counter",
        "from sympy import integer_nthroot",
        "def icuberoot(n): return integer_nthroot(n, 3)[0]",
        "def aupto(kmax):",
        "    cubes = [i**3 for i in range(kmax+1)]",
        "    cands, cubesset = (sum(c) for c in combinations(cubes, 3)), set(cubes)",
        "    c = Counter(s for s in cands if s in cubesset)",
        "    return sorted(icuberoot(s) for s in c if c[s] >= 2)",
        "print(aupto(203)) # _Michael S. Branicky_, Sep 04 2021"
    ],
    "xref": [
        "Subsequence of A023042.",
        "Cf. A001235, A346071."
    ],
    "keyword": "nonn",
    "offset": "1,1",
    "author": "_Sebastian Magee_, Jul 30 2021",
    "references": 1,
    "revision": 63,
    "time": "2021-10-05T22:46:40-04:00",
    "created": "2021-10-05T22:46:40-04:00"
}
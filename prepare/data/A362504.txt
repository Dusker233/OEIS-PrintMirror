{
    "number": 362504,
    "data": "1,11,291,8547,259123,7997355,250062515,7900153283,251686581987,8073549437643,260453164773827,8441983967058723,274715571055249171,8969873019615172459,293727992832116083539,9642550297656399476611,317240324217012764748739",
    "name": "Number of paths across a regular hexagonal grid with side length n.",
    "comment": [
        "Each side of the hexagonal grid is tiled with n hexagons. A path starts at one vertex and ends at the diametrically opposite vertex. Each step comprises moving one cell down, one cell down-right or one cell up-right (no moving up or left)."
    ],
    "link": [
        "Matthew Blair, Rigoberto Fl\u00f3rez, and Antara Mukherjee, <a href=\"https://arxiv.org/abs/2203.13205\">Honeycombs in the Hosoya Triangle</a>, arXiv:2203.13205 [math.HO], 2022."
    ],
    "example": [
        "For n=2 there are 11 paths that cross diametrically opposite tiles in a honeycomb with 2 hexagons on each side. For n=3 there are 291 such paths."
    ],
    "program": [
        "(Python)",
        "def paths(x, y, n):",
        "    if (x, y) in [(0, 0), (0, 1), (1, 0)]:",
        "        return 1",
        "    elif x == 0:",
        "        return paths(x, y - 1, n)",
        "    elif y == 0:",
        "        return paths(x - 1, y, n)",
        "    elif y == x + n - 1:",
        "        return paths(x, y - 1, n) + paths(x - 1, y - 1, n)",
        "    elif x == y + n - 1:",
        "        return paths(x - 1, y, n) + paths(x - 1, y - 1, n)",
        "    else:",
        "        return paths(x, y - 1, n) + paths(x - 1, y, n) + paths(x - 1, y - 1, n)",
        "def honeycomb_paths(n):",
        "    return paths(2 * n - 2, 2 * n - 2, n)"
    ],
    "keyword": "nonn,walk",
    "offset": "1,2",
    "author": "_Alexandra S. Kim_, Apr 21 2023",
    "references": 0,
    "revision": 17,
    "time": "2023-07-27T12:15:49-04:00",
    "created": "2023-07-27T12:15:49-04:00"
}
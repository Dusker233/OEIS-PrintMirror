{
    "number": 7227,
    "id": "M4624",
    "data": "9,42,236,1287,7314,41990,245256,1448655,8649823,52106040,316360752,1933910820,11893566078,73537906926,456864894288,2850557192175,17854854154215,112230508880490,707714010205020,4475876883386895",
    "name": "Number of distinct perforation patterns for deriving (v,b) = (n+2,n) punctured convolutional codes from (3,1).",
    "comment": [
        "From _Petros Hadjicostas_, Jul 27 2020: (Start)",
        "\"A punctured convolutional code is a high-rate code obtained by the periodic elimination (i.e., puncturing) of specific code symbols from the output of a low-rate encoder. The resulting high-rate code depends on both the low-rate code, called the original code, and the number and specific positions of the punctured symbols.\" (The quote is from Haccoun and B\u00e9gin (1989).)",
        "A high-rate code (v,b) (written as R = b/v) can be constructed from a low-rate code (v0,1) (written as R = 1/v0) by deleting from every v0*b code symbols a number of v0*b - v symbols (so that the resulting rate is R = b/v).",
        "Even though the formulas below do not appear in the two published papers in the IEEE Transactions on Communications, from the theory in those two papers, it makes sense to replace \"k|b\" with \"k|v0*b\" (and \"k|gcd(v,b)\" with \"k|gcd(v,v0*b)\"). Pab Ter, however, uses \"k|b\" in the Maple program below. (End)"
    ],
    "reference": [
        "Guy B\u00e9gin, On the enumeration of perforation patterns for punctured convolutional codes, S\u00e9ries Formelles et Combinatoire Alg\u00e9brique, 4th colloquium, 15-19 Juin 1992, Montr\u00e9al, Universit\u00e9 du Qu\u00e9bec \u00e0 Montr\u00e9al, pp. 1-10.",
        "N. J. A. Sloane and Simon Plouffe, The Encyclopedia of Integer Sequences, Academic Press, 1995 (includes this sequence)."
    ],
    "link": [
        "Guy B\u00e9gin and David Haccoun, <a href=\"https://doi.org/10.1109/26.44210\">High rate punctured convolutions codes: Structure properties and construction techniques</a>, IEEE Transactions on Communications 37(12) (1989), 1381-1385.",
        "David Haccoun and Guy B\u00e9gin, <a href=\"https://doi.org/10.1109/26.46505\">High rate punctured convolutional codes for Viterbi and sequential coding</a>, IEEE Transactions on Communications, 37(11) (1989), 1113-1125; see Section II."
    ],
    "formula": [
        "From _Petros Hadjicostas_, Jul 27 2020: (Start)",
        "The number of perforation patterns to derive high-rate convolutional code (v,b) (written as R = b/v) from a given low-rate convolutional code (v0, 1) (written as R = 1/v0) is (1/b)*Sum_{k|gcd(v,b)} phi(k)*binomial(v0*b/k, v/k).",
        "According to Pab Ter's Maple code, this is the coefficient of z^v in the polynomial (1/b)*Sum_{k|b} phi(k)*(1 + z^k)^(v0*b/k).",
        "Here (v,b) = (n+2,n) and (v0,1) = (3,1), so",
        "a(n) = (1/n)*Sum_{k|gcd(n+2,n)} phi(k)*binomial(3*n/k, (n+2)/k).",
        "This simplifies to",
        "a(n) = (1/n)*(binomial(3*n, n+2) + [(n mod 2) = 0]*binomial(3*n/2, (n/2) + 1)), where [ ] is the Iverson bracket. (End)"
    ],
    "maple": [
        "with(numtheory):P:=proc(b,v0) local k: RETURN(add(phi(k)*(1+z^k)^(v0*(b/k)),k=divisors(b))/b): end; seq(coeff(P(b,3),z,b+2),b=2..40); (Pab Ter)"
    ],
    "xref": [
        "Cf. A007223, A007224, A007225, A007229."
    ],
    "keyword": "nonn",
    "offset": "2,1",
    "author": "_Simon Plouffe_",
    "ext": [
        "More terms from Pab Ter (pabrlos2(AT)yahoo.com), Nov 13 2005"
    ],
    "references": 2,
    "revision": 28,
    "time": "2020-07-28T02:47:22-04:00",
    "created": "1994-04-28T03:00:00-04:00"
}
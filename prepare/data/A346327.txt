{
    "number": 346327,
    "data": "4100,4131,4162,4193,4342,4373,4404,4584,4615,4826,5123,5154,5185,5365,5396,5607,6146,6177,6388,7169,7224,7255,7286,7466,7497,7708,8247,8278,8489,9270,10348,10379,10590,11371,11875,11906,11937,12117,12148,12359,12898",
    "name": "Numbers that are the sum of eight fifth powers in exactly two ways.",
    "comment": [
        "Differs from A345610 at term 128 because 52417 = 3^5 + 3^5 + 3^5 + 3^5 + 5^5 + 6^5 + 6^5 + 8^5 = 1^5 + 4^5 + 4^5 + 4^5 + 4^5 + 6^5 + 6^5 + 8^5 = 3^5 + 3^5 + 3^5 + 3^5 + 4^5 + 7^5 + 7^5 + 7^5."
    ],
    "link": [
        "Sean A. Irvine, <a href=\"/A346327/b346327.txt\">Table of n, a(n) for n = 1..10000</a>"
    ],
    "example": [
        "4100 is a term because 4100 = 1^5 + 1^5 + 1^5 + 3^5 + 3^5 + 3^5 + 3^5 + 5^5 = 1^5 + 1^5 + 1^5 + 1^5 + 4^5 + 4^5 + 4^5 + 4^5."
    ],
    "program": [
        "(Python)",
        "from itertools import combinations_with_replacement as cwr",
        "from collections import defaultdict",
        "keep = defaultdict(lambda: 0)",
        "power_terms = [x**5 for x in range(1, 1000)]",
        "for pos in cwr(power_terms, 8):",
        "    tot = sum(pos)",
        "    keep[tot] += 1",
        "    rets = sorted([k for k, v in keep.items() if v == 2])",
        "    for x in range(len(rets)):",
        "        print(rets[x])"
    ],
    "xref": [
        "Cf. A345610, A345834, A346279, A346326, A346328, A346337."
    ],
    "keyword": "nonn",
    "offset": "1,1",
    "author": "_David Consiglio, Jr._, Jul 13 2021",
    "references": 7,
    "revision": 6,
    "time": "2021-07-31T19:03:41-04:00",
    "created": "2021-07-13T21:19:49-04:00"
}
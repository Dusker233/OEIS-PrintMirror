{
    "number": 329535,
    "data": "1,159,283,377,502,503,603,615,668,669,670,799,807,888,890,892,893,1063,1065,1095,1186,1187,1188,1189,1190,1417,1435,1580,1581,1582,1585,1586,1587,1889,1913,1947,1959,1963,2104,2106,2108,2109,2113,2114,2115,2119,2518",
    "name": "Numbers with twice as many halving steps before reaching 1 in the 3x + 1 problem as tripling steps.",
    "comment": [
        "Essentially the same as A281665. - _R. J. Mathar_, Feb 07 2020",
        "Numbers m such that A006666(m) = 2 * A006667(m).",
        "Steps after reaching 1 the first time are ignored. For example, for 5, 16, 8, 4, 2, 1, 4, 2, 1, ..., only 8, 4, 2, 1 are counted for halving steps, the subsequent 4, 2, 1 subcycles are ignored."
    ],
    "example": [
        "159 is in the sequence because its trajectory, 159, 478, 239, 718, ..., has 36 halving steps and 18 tripling steps.",
        "160 is not in the sequence because its trajectory, 160, 80, 40, 20, 10, 5, 16, 8, 4, 2, 1, has nine even terms but only two odd terms."
    ],
    "mathematica": [
        "collatz[n_] := NestWhileList[If[EvenQ[#], #/2, 3 # + 1] &, n, # > 1 &]; nn = 50; t = {}; n = 0; While[Length[t] < nn, n++; c = collatz[n]; ev = Length[Select[c, EvenQ]]; od = Length[c] - ev - 1; If[ev == 2 * od, AppendTo[t, n]]]; t"
    ],
    "program": [
        "(Scala) def halfTripleCompare(n: Int): Int = {",
        "  var curr = n",
        "  var htc = 0",
        "  while (curr > 1) {",
        "    curr = (curr % 2) match {",
        "      case 0 => htc = htc + 1",
        "        curr / 2",
        "      case 1 => htc = htc - 2",
        "        3 * curr + 1",
        "    }",
        "  }",
        "  htc",
        "}",
        "(1 to 1000).filter(halfTripleCompare(_) == 0) // _Alonso del Arte_, Nov 18 2019"
    ],
    "xref": [
        "Cf. A006666, A006667."
    ],
    "keyword": "nonn",
    "offset": "1,2",
    "author": "_Michel Lagneau_, Nov 16 2019",
    "references": 0,
    "revision": 28,
    "time": "2020-02-11T12:04:31-05:00",
    "created": "2020-01-24T17:16:17-05:00"
}
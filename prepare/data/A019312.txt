{
    "number": 19312,
    "data": "0,2,3,7,9,15,17,21,30,40,44,50,52,66,81,89,93,111,113,124,144,166,170,182,198,224,251,279,285,301,303,319,352,386,418,442,448,486,503,525,529,571,573,617,660,706,710,734,758,808,833,885,891,940",
    "name": "Taxman sequence: define T(S) by max{x+T(S \\ {c : c|x})}, where the max is over all x in S for which S also contains a proper divisor of x; if no such x exists, T(S)=0; set T(n)=T({1,...,n}).",
    "comment": [
        "In Germany this is called the Number Shark (Zahlenhai) sequence: see the CrypTool link.",
        "This sequence is associated with the taxman game. The open source cryptography e-learning program JCrypTool (JCT) includes a tutorial and a discussion about strategies for the taxman game. - _Bernhard Esslinger_, Mar 17 2015, Sep 17 2019 and May 04 2020",
        "In order for a player to select a number in the game, at least one of the number's maximal factors must be available to be claimed by the taxman. - _Brian Chess_, Sep 24 2022"
    ],
    "link": [
        "Brian Chess, <a href=\"/A019312/b019312.txt\">Table of n, a(n) for n = 1..1000</a> (Terms 1..158 by Dan Hoey; 159..227 by Timothy Loh; 228..404 by Bernhard Esslinger; 405..519 by van Nek)",
        "Brian Chess, <a href=\"https://github.com/bvchess/taxman/wiki\">taxman</a>",
        "Bernhard Esslinger, <a href=\"http://www.cryptool.org\">CrypTool</a>",
        "Atli Fannar Frankl\u00edn and Robert K. Moniot, <a href=\"/A019312/a019312.pdf\">Polynomial-Time Upper Bound to the Taxman Score</a>",
        "Dan Hoey, <a href=\"/A019312/a019312.txt\">Notes on A019312</a>",
        "Robert K. Moniot, <a href=\"http://dsm.dsm.fordham.edu/~moniot/taxman-game.pdf\">The Taxman Game</a>",
        "Brandee Wilson, <a href=\"https://web.archive.org/web/20151023160904/http://scimath.unl.edu/MIM/files/MATExamFiles/Wilson_FINAL.pdf\">The Taxman Game</a>"
    ],
    "formula": [
        "When you take a number from S, you must give all its proper divisors to the tax man and there must be at least one to give; T(S) is the maximum total income."
    ],
    "program": [
        "(Haskell)",
        "import Data.List ((\\\\), intersect)",
        "a019312 = t . enumFromTo 1 where",
        "   t xs = foldl max 0 [z + t (xs \\\\ ds) | z <- xs,",
        "             let ds = a027750_row z, not $ null $ intersect xs $ init ds]",
        "-- _Reinhard Zumkeller_, Apr 05 2015"
    ],
    "xref": [
        "Cf. A355079."
    ],
    "keyword": "nonn,nice",
    "offset": "1,2",
    "author": "_Dan Hoey_",
    "ext": [
        "Extended by _Timothy Loh_, Aug 12 2012"
    ],
    "references": 2,
    "revision": 111,
    "time": "2022-10-15T05:59:02-04:00",
    "created": "1996-12-11T03:00:00-05:00"
}
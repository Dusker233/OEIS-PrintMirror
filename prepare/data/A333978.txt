{
    "number": 333978,
    "data": "1,2,4,6,8,12,16,18,24,32,36,48,54,64,72,96,108,120,128,144,162,192,216,240,256,288,324,360,384,432,480,486,512,576,600,648,720,768,864,960,972,1024,1080,1152,1200,1296,1440,1458,1536,1728,1800,1920,1944,2048",
    "name": "Numbers of the form b_1 * b_2 * ... * b_t, where b_1 = 1 and b_(i + 1) - b_i = 0 or 1.",
    "comment": [
        "This sequence gives the distinct values in A284001, sorted.",
        "If m and k are in this sequence, then so is their product m*k.",
        "If a prime p divides a(n), then so does p!.",
        "A001013 is a subsequence.",
        "Define a set S of polynomials by: (i) 1 is in S; (ii) if P is in S, then x*P and dP/dx are in S; (iii) if the repeated application of (i) and (ii) fails to prove that P is in S then P is not in S. This sequence enumerates the elements of S of degree 0. - _Luc Rousseau_, Aug 20 2022",
        "Numbers k divisible by A102068(k)  (or in other words, numbers k divisible by h(k)! where h(k) is the largest prime factor of k). - _David A. Corneth_, Aug 20 2022"
    ],
    "link": [
        "Michael S. Branicky, <a href=\"/A333978/b333978.txt\">Table of n, a(n) for n = 1..10000</a> (terms 1..1000 from Peter Kagey)"
    ],
    "example": [
        "The first 11 terms can be written as",
        "   1 = 1",
        "   2 = 1 * 2",
        "   4 = 1 * 2 * 2",
        "   6 = 1 * 2 * 3",
        "   8 = 1 * 2 * 2 * 2",
        "  12 = 1 * 2 * 2 * 3",
        "  16 = 1 * 2 * 2 * 2 * 2",
        "  18 = 1 * 2 * 3 * 3",
        "  24 = 1 * 2 * 3 * 4 or 1 * 2 * 2 * 2 * 3",
        "  32 = 1 * 2 * 2 * 2 * 2 * 2",
        "  36 = 1 * 2 * 2 * 3 * 3"
    ],
    "program": [
        "(SWI-Prolog)",
        "main :- iter(1).",
        "iter(K) :-",
        "    (legal(K * x ^ 0) -> (maplist(write, [K, ', ']), flush_output) ; true),",
        "    KK is K + 1, iter(KK).",
        "legal(1 * x ^ 0).",
        "legal(K * x ^ N) :-",
        "    NN is N + 1, 0 is K mod NN, KK is K / NN,",
        "    legal(KK * x ^ NN).",
        "legal(K * x ^ N) :-",
        "    ((K = 1, N = 1) ; (N > 1)), NN is N - 1,",
        "    legal(K * x ^ NN).",
        "% _Luc Rousseau_, Aug 20 2022",
        "(Python)",
        "import heapq",
        "from math import factorial",
        "from sympy import nextprime",
        "from itertools import islice",
        "def agen(): # generator of terms",
        "    oldv, h, primes, nextp, nextfact = 0, [(1, 1)], [], 0, 0",
        "    while True:",
        "        v, maxp = heapq.heappop(h)",
        "        if v != oldv:",
        "            yield v; oldv = v",
        "            while nextfact < v:",
        "                nextp = nextprime(nextp); nextfact = factorial(nextp)",
        "                primes.append(nextp); heapq.heappush(h, (nextfact, nextp))",
        "            for p in primes:",
        "                if p <= maxp: heapq.heappush(h, (v*p, max(maxp, p)))",
        "                else: break",
        "print(list(islice(agen(), 60))) # _Michael S. Branicky_, Aug 20 2022",
        "(PARI) is(n) = if(n==1, return(1)); my(f = factor(n), p = f[#f~, 1]); n%p! == 0 \\\\ _David A. Corneth_, Sep 05 2022"
    ],
    "xref": [
        "Cf. A001013, A003586, A006530, A102068, A284001, A334636."
    ],
    "keyword": "nonn,easy",
    "offset": "1,2",
    "author": "_Peter Kagey_, Sep 20 2020",
    "references": 1,
    "revision": 90,
    "time": "2022-09-24T15:45:17-04:00",
    "created": "2020-09-22T02:42:49-04:00"
}
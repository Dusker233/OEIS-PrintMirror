{
    "number": 135600,
    "data": "100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147",
    "name": "Angled numbers with an internal digit as the vertex.",
    "comment": [
        "The structure of digits represents an angle. The vertex is an internal digit. In the graphic representation the points are connected by imaginary line segments from left to right. The last acute-angled number of this sequence has 14 digits: 98765432102468. The last right-angled number of this sequence has 19 digits: 9876543210123456789. All 3-digit numbers are terms of this sequence. Next terms are 1000, 1012, 1024, 1036, 1048, 1110, 1111, 1112, 1113, 1114, ....",
        "For each k >= 20, there are 363 k-digit terms: 354 obtuse-angled and 9 straight-angled.- _Michael S. Branicky_, Aug 03 2022"
    ],
    "link": [
        "David A. Corneth, <a href=\"/A135600/b135600.txt\">Table of n, a(n) for n = 1..10910</a>",
        "David A. Corneth, <a href=\"/A135600/a135600.gp.txt\">PARI program</a>"
    ],
    "example": [
        "The acute-angled number 12342 (see A135601):",
        "  . . . . .",
        "  . . . 4 .",
        "  . . 3 . .",
        "  . 2 . . 2",
        "  1 . . . .",
        "The right-angled number 12343 (see A135602):",
        "  . . . . .",
        "  . . . 4 .",
        "  . . 3 . 3",
        "  . 2 . . .",
        "  1 . . . .",
        "The obtuse-angled number 12344 (see A135603):",
        "  . . . . .",
        "  . . . 4 4",
        "  . . 3 . .",
        "  . 2 . . .",
        "  1 . . . .",
        "The straight-angled (or straight-line) number 12345 (see A135643):",
        "  . . . . 5",
        "  . . . 4 .",
        "  . . 3 . .",
        "  . 2 . . .",
        "  1 . . . ."
    ],
    "program": [
        "(PARI) See PARI link \\\\ _David A. Corneth_, Aug 02 2022",
        "(Python)",
        "from itertools import count, islice",
        "def agen():",
        "    seeds = [k for k in range(100, 1000)]",
        "    for digits in count(4):",
        "        yield from sorted(seeds)",
        "        new, pow10 = set(), 10**(digits-1)",
        "        for q in seeds:",
        "            d = list(map(int, str(q)))",
        "            e1, e2 = d[0] - (d[1]-d[0]), d[-1] + (d[-1]-d[-2])",
        "            if 9 >= e1 > 0: new.add(e1*pow10 + q)",
        "            if 9 >= e2 >= 0: new.add(10*q + e2)",
        "        seeds = new",
        "print(list(islice(agen(), 50))) # _Michael S. Branicky_, Aug 03 2022"
    ],
    "xref": [
        "Cf. A134810, A134853, A134941, A134970, A135641, A135642, A135643, A135601, A135602, A135603."
    ],
    "keyword": "nonn,easy,base",
    "offset": "1,1",
    "author": "_Omar E. Pol_, Dec 02 2007",
    "references": 9,
    "revision": 17,
    "time": "2022-08-06T07:15:10-04:00",
    "created": "2007-12-09T03:00:00-05:00"
}
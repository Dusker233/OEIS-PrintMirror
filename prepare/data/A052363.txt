{
    "number": 52363,
    "data": "0,3,11,13,17,23,73,101,103,111,113,117,123,173,323,373,1103,1111,1113,1117,1123,1173,1323,1373,3323,3373,11373,13323,13373,17373,23323,23373,73373,101373,103323,103373,111373,113323,113373,117373,123323,123373,173373,323373,373373",
    "name": "Numbers n whose English name has a greater length (A005589) than any smaller number.",
    "comment": [
        "Indices of records in A005589 (which only counts letters, but not spaces and punctuation, in the English name of numbers)."
    ],
    "link": [
        "Michael S. Branicky, <a href=\"/A052363/b052363.txt\">Table of n, a(n) for n = 1..597</a> (terms < 10^54)",
        "Eric Weisstein's World of Mathematics, <a href=\"http://mathworld.wolfram.com/Number.html\">Number</a>",
        "Eric Weisstein's World of Mathematics, <a href=\"https://mathworld.wolfram.com/LargeNumber.html\">Large Number</a>",
        "Wikipedia, <a href=\"https://en.wikipedia.org/wiki/Names_of_large_numbers\">Names of Large Numbers</a>",
        "Wiktionary, <a href=\"https://en.wiktionary.org/wiki/one_hundred_one\">one hundred one</a> (US)",
        "Wiktionary, <a href=\"https://en.wiktionary.org/wiki/one_hundred_and_one\">one hundred and one</a> (UK)",
        "Robert G. Wilson v, <a href=\"https://oeis.org/A001477/a001477.txt\">American English names for the numbers from 0 to 100999 without spaces or hyphens</a>"
    ],
    "example": [
        "Note that A052360(373373) = 64 and A005589(373373) = 56.",
        "Sequence A052362 uses A052360 which also counts spaces and dashes, therefore \"twenty-one\" is in that sequence but not in this one: it uses one more character ('-') but has the same number of letters than \"seventeen\". - _M. F. Hasler_, Aug 12 2020"
    ],
    "program": [
        "(PARI) m=0; for(n=0, 2e6, if(m<A005589(n), m=A005589(n); print1(n\", \"))) \\\\ _M. F. Hasler_, Aug 12 2020",
        "(Python)",
        "from itertools import count, islice",
        "from num2words import num2words as n2w",
        "def f(n): return sum(1 for c in n2w(n).replace(\" and\", \"\") if c.isalpha())",
        "def agen():",
        "    record = 0",
        "    for n in count(0):",
        "        value = f(n)",
        "        if value > record: yield n; record = value",
        "        n += 1",
        "print(list(islice(agen(), 40))) # _Michael S. Branicky_, Jul 12 2022"
    ],
    "xref": [
        "Cf. A005589, A052360, A052362."
    ],
    "keyword": "nonn,word",
    "offset": "1,2",
    "author": "_Allan C. Wechsler_, Mar 07 2000",
    "ext": [
        "Edited by _R. J. Mathar_ and _T. D. Noe_, Apr 09 2009",
        "Minor edits by _Ray Chandler_, Jul 22 2009",
        "a(41) and beyond from _Michael S. Branicky_, Jul 12 2022"
    ],
    "references": 11,
    "revision": 32,
    "time": "2023-04-25T03:33:45-04:00",
    "created": "2000-05-08T03:00:00-04:00"
}
{
    "number": 365303,
    "data": "0,1,8,57,256,1153,4181,14180,47381,115267,307214,737909,1682367,3850940,8557010,18311575,37925058,61662056",
    "name": "a(n) is the smallest nonnegative integer such that the sum of any seven ordered terms a(k), k<=n (repetitions allowed), is unique.",
    "comment": [
        "This is the greedy B_7 sequence."
    ],
    "link": [
        "J. Cilleruelo and J Jimenez-Urroz, <a href=\"https://doi.org/10.1112/S0025579300015758\">B_h[g] sequences</a>, Mathematika (47) 2000, pp. 109-115.",
        "Kevin O'Bryant, <a href=\"https://doi.org/10.37236/32\">A complete annotated bibliography of work related to Sidon sequences</a>, Electron. J. Combin., DS11, Dynamic Surveys (2004), 39 pp."
    ],
    "example": [
        "a(3) != 7 because 7+0+0+0+0+0+0 = 1+1+1+1+1+1+1."
    ],
    "program": [
        "(Python)",
        "def GreedyBh(h, seed, stopat):",
        "    A = [set() for _ in range(h+1)]",
        "    A[1] = set(seed)    # A[i] will hold the i-fold sumset",
        "    for j in range(2,h+1): # {2,...,h}",
        "        for x in A[1]:",
        "            A[j].update([x+y for y in A[j-1]])",
        "    w = max(A[1])+1",
        "    while w <= stopat:",
        "        wgood = True",
        "        for k in range(1,h):",
        "            if wgood:",
        "                for j in range(k+1,h+1):",
        "                    if wgood and (A[j].intersection([(j-k)*w + x for x in A[k]]) != set()):",
        "                        wgood = False",
        "        if wgood:",
        "            A[1].add(w)",
        "            for k in range(2,h+1): # update A[k]",
        "                for j in range(1,k):",
        "                    A[k].update([(k-j)*w + x for x in A[j]])",
        "        w += 1",
        "        return A[1]",
        "GreedyBh(7,[0],10000)",
        "(Python)",
        "from itertools import count, islice, combinations_with_replacement",
        "def A365303_gen(): # generator of terms",
        "    aset, alist = set(), []",
        "    for k in count(0):",
        "        bset = set()",
        "        for d in combinations_with_replacement(alist+[k],6):",
        "            if (m:=sum(d)+k) in aset:",
        "                break",
        "            bset.add(m)",
        "        else:",
        "            yield k",
        "            alist.append(k)",
        "            aset |= bset",
        "A365303_list = list(islice(A365303_gen(),10)) # _Chai Wah Wu_, Sep 01 2023"
    ],
    "xref": [
        "Cf. A025582, A051912, A365300, A365301, A365302, A365304, A365305."
    ],
    "keyword": "nonn,more,new",
    "offset": "1,3",
    "author": "_Kevin O'Bryant_, Aug 31 2023",
    "ext": [
        "a(13)-a(18) from _Chai Wah Wu_, Sep 13 2023"
    ],
    "references": 4,
    "revision": 27,
    "time": "2023-10-09T20:27:54-04:00",
    "created": "2023-10-09T20:27:54-04:00"
}
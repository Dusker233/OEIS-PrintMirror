{
    "number": 55521,
    "data": "773,3373,3947,4643,5113,6397,6967,7937,15647,16823,24373,33547,34337,37643,56983,57853,59743,62383,63347,63617,69337,72467,72617,75653,76367,87643,92683,97883,98317,121997,124337,163853,213613,236653",
    "name": "Restricted left truncatable (Henry VIII) primes.",
    "comment": [
        "There are 1440 such primes, the largest being 357686312646216567629137.",
        "Left-truncatable primes (A024785) which have at least two digits and are not the end of a larger left-truncatable prime. - _Jens Kruse Andersen_, Jul 29 2014"
    ],
    "reference": [
        "Kahan, S. and Weintraub, S. \"Left Truncatable Primes.\" J. Recr. Math. 29, 254-264, 1998."
    ],
    "link": [
        "Jens Kruse Andersen, <a href=\"/A055521/b055521.txt\">Table of n, a(n) for n = 1..1440</a> (complete sequence)",
        "I. O. Angell, and H. J. Godwin, <a href=\"http://dx.doi.org/10.1090/S0025-5718-1977-0427213-2\">On Truncatable Primes</a>, Math. Comput. 31, 265-267, 1977.",
        "James Grime and Brady Haran, <a href=\"https://www.youtube.com/watch?v=azL5ehbw_24\">357686312646216567629137</a>, Numberphile video (2018)",
        "Eric Weisstein's World of Mathematics, <a href=\"http://mathworld.wolfram.com/TruncatablePrime.html\">Truncatable Prime</a>",
        "<a href=\"/index/Tri#tprime\">Index entries for sequences related to truncatable primes</a>"
    ],
    "example": [
        "773 is in the sequence since 773, 73, 3 are primes, while no digit 1..9 gives a prime if placed before 773. 13 is not in the sequence since for example 113 is prime. 2 and 5 are disqualified for only having one digit. - _Jens Kruse Andersen_, Jul 29 2014"
    ],
    "program": [
        "(Python)",
        "from sympy import isprime, primerange",
        "def afull():",
        "    alst, prime_strs, an, digits = [], [\"2\", \"3\", \"5\", \"7\"], 0, 1",
        "    while len(prime_strs) > 0:",
        "        new_prime_strs = set()",
        "        for p in prime_strs:",
        "            can_extend = False",
        "            for d in \"123456789\":",
        "                c = d + p",
        "                if isprime(int(c)):",
        "                    can_extend = True",
        "                    new_prime_strs.add(c)",
        "            if digits > 1 and not can_extend:",
        "                alst.append(int(p))",
        "        prime_strs = new_prime_strs",
        "        digits += 1",
        "    return sorted(alst)",
        "print(afull()) # _Michael S. Branicky_, Dec 11 2022"
    ],
    "xref": [
        "Cf. A024785."
    ],
    "keyword": "nonn,base,fini,full",
    "offset": "1,1",
    "author": "_Eric W. Weisstein_",
    "references": 3,
    "revision": 27,
    "time": "2022-12-11T23:04:36-05:00",
    "created": "2000-06-15T03:00:00-04:00"
}
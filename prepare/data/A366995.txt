{
    "number": 366995,
    "data": "3,39,359,2477,119667,1522705,46419629,6143100517,5472109127035,790136773603303,278129286200597661,16684426086791338103,503067648850136040148699,2626565018569118643191009,10920130209346850287269887104735,236686188450953790757840351941895",
    "name": "a(n) is the numerator of the expected end time of a game with three gamblers, one of which starts with capital n, the others with capital 1 each, conditional on the event that one of the two poor players wins.",
    "comment": [
        "In each round of the game, 1 unit is transferred from one randomly chosen player to another. Players play until they are out of money, so when the first player is out the other two continue to play. The winner is the player who ends up with all n+2 units of money."
    ],
    "link": [
        "Persi Diaconis and Stewart N. Ethier, <a href=\"https://doi.org/10.1214/21-STS826\">Gambler\u2019s ruin and the ICM</a>, Statist. Sci. 37 (3) 289-305, August 2022.",
        "Persi Diaconis, <a href=\"https://sites.math.rutgers.edu/~zeilberg/expmath/diaconis23.pdf\">Gambler's ruin with k gamblers</a>, slides from talk in the Rutgers Experimental Mathematics Seminar, <a href=\"https://sites.math.rutgers.edu/~zeilberg/expmath/archive23.html\">Fall 2023 Semester</a>, Oct 12, 2023.",
        "Experimental Mathematics, <a href=\"https://vimeo.com/876882233\">Gambler\u2019s ruin with k gamblers</a>, recording of talk, Vimeo video, Oct 22, 2023."
    ],
    "program": [
        "(Sage)",
        "from itertools import permutations",
        "def T(n):",
        "    nodes = [(i,j) for i in range(n+2) for j in range((n+2-i)//2+1)]",
        "    m = len(nodes)",
        "    Q0 = {x:{y:0 for y in nodes} for x in nodes}",
        "    for x in nodes:",
        "        c1 = x+(n+2-sum(x),)",
        "        for i,j in permutations(range(3),int(2)):",
        "            if c1[i] and c1[j]:",
        "                c2 = list(c1)",
        "                c2[i] -= 1",
        "                c2[j] += 1",
        "                y = (c2[0],min(c2[1:]))",
        "                if c2[0] != n+2:",
        "                    Q0[x][y] += n+2-c2[0]",
        "    Q0 = matrix(QQ,[list(R.values()) for R in Q0.values()])",
        "    s = sum(Q0.columns())",
        "    Q = identity_matrix(QQ,m-1)",
        "    for i in range(1,m):",
        "        for j in range(1,m):",
        "            if s[i] != 0: Q[i-1,j-1] -= Q0[i,j]/s[i]",
        "    return (Q**(-1)*ones_matrix(QQ,m-1))[-2,0]",
        "def A366995(n):",
        "    return T(n).numerator()",
        "def A366996(n):",
        "    return T(n).denominator()"
    ],
    "xref": [
        "Cf. A366566 (a(n)/A366996(n) rounded to nearest integer), A366996 (denominators)."
    ],
    "keyword": "nonn,frac,new",
    "offset": "1,1",
    "author": "_Pontus von Br\u00f6mssen_, Oct 31 2023",
    "references": 0,
    "revision": 9,
    "time": "2023-10-31T21:57:54-04:00",
    "created": "2023-10-31T21:57:54-04:00"
}
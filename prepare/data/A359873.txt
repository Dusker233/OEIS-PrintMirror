{
    "number": 359873,
    "data": "6,12,18,24,30,36,38,42,48,52,56,60,66,72,78",
    "name": "Minimum number of consecutive positive integers to guarantee n abundant or perfect numbers.",
    "comment": [
        "It is rather easy to show that a(n) <= 6n. Marc Del\u00e9glise (1998)'s bounds on the density of abundant numbers gives that a(n)/n approaches a value between 4.032 and 4.043."
    ],
    "link": [
        "Marc Del\u00e9glise, <a href=\"https://doi.org/10.1080/10586458.1998.10504363\">Bounds for the density of abundant integers</a>, Experimental Mathematics, Vol. 7, No. 2 (1998), pp. 137-143; <a href=\"http://mcdanielabundancy.wdfiles.com/local--files/bounds-for-abundancy-density/DelegliseDensBounds.pdf\">alternative link</a>."
    ],
    "example": [
        "For n=8, there must be 7 multiples of 6 within the 42 numbers, which are all abundant/perfect. There must also be 2 multiples of 20 that are abundant/perfect. Note that between the multiples of 6 and the multiples of 20, there can be at most one repetition, thus giving 8 abundant numbers. 41 fails with 115, 116, ..., 155."
    ],
    "program": [
        "(Python)",
        "def f(n):",
        "    ans = 0",
        "    for i in range(1, n):",
        "        if n % i ==0:",
        "            ans += i",
        "    return ans",
        "l=[]",
        "for i in range(1, 100000):",
        "    if f(i) - i > -1:",
        "        l.append(i)",
        "def listing(k, f):",
        "    for i in range(len(l)-k):",
        "        if l[i+k]-l[i] > f:",
        "            return (l[i], l[i+k])",
        "def a(n):",
        "    a = 0",
        "    while not listing(n, a) == None:",
        "        a += 1",
        "    return a"
    ],
    "xref": [
        "Cf. A023196 (abundant or perfect numbers)."
    ],
    "keyword": "nonn,more",
    "offset": "1,1",
    "author": "_Lincoln Liu_, May 20 2023",
    "references": 0,
    "revision": 51,
    "time": "2023-07-27T08:29:17-04:00",
    "created": "2023-07-27T08:29:17-04:00"
}
{
    "number": 335731,
    "data": "1061,1091,1601,1901,10061,10091,16001,19001,106861,109891,110651,110921,120121,121021,121921,129011,129121,150151,151051,151651,156011,156151,168601,198901,1022591,1026521,1028011,1055261,1058011,1059251,1069291,1096561,1102891,1105861,1106881,1108201,1108501,1109881,1111651",
    "name": "Bemirps that also interpret 2 and 5 as upside-down forms of each other, assuming a digital font.",
    "example": [
        "110651 is in the list as its upside-down form 110921, and its emirp 156011, and the emirp of its upside-down form 129011, are all primes and uniquely different numbers."
    ],
    "program": [
        "(Python)",
        "from sympy.ntheory import isprime as isp",
        "def ip(pp):",
        "    rr = []",
        "    for qq in pp:",
        "        if qq==\"0\" or qq==\"1\" or qq==\"8\":",
        "            rr.append(qq)",
        "        elif qq==\"2\":",
        "            rr.append(\"5\")",
        "        elif qq==\"5\":",
        "            rr.append(\"2\")",
        "        elif qq==\"6\":",
        "            rr.append(\"9\")",
        "        elif qq==\"9\":",
        "            rr.append(\"6\")",
        "    return \"\".join(rr)",
        "for bb in range(1,10000000):",
        "    if isp(bb):",
        "        bb = str(bb)",
        "        if (\"7\" not in bb) and (\"4\" not in bb) and (\"3\" not in bb):",
        "            cc = bb[::-1]",
        "            dd = ip(bb)",
        "            ee = ip(cc)",
        "            if bb!=cc and dd!=ee and bb!=dd and bb!=ee and cc!=dd and cc!=ee and isp(int(cc)) and isp(int(dd)) and isp(int(ee)):",
        "                print(bb)"
    ],
    "xref": [
        "Normal bemirps are defined in A048895."
    ],
    "keyword": "base,nonn",
    "offset": "1,1",
    "author": "_Ray G. Opao_, Jun 20 2020",
    "references": 0,
    "revision": 18,
    "time": "2020-07-05T12:44:37-04:00",
    "created": "2020-07-05T12:44:37-04:00"
}
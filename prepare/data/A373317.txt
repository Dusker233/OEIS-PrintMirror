{
    "number": 373317,
    "data": "17,25,100,115,116,144,157,182,184,186,191,193,199,223,236",
    "name": "Numbers which are their own imbalance when written in English (see the definition of the imbalance in the Comments section).",
    "comment": [
        "Take a number. Write this number in capital letters. Remove any spaces or hyphens to form a single block of contiguous letters. Cut this block into two parts using a vertical line which is tangent to at least one of the letters. The word ONE, for example, admits four cuts, the first before the O, the second between the O and the N, the third between the N and the E, the fourth after the E. These respective cuts produce the four pairs of subsets of following letters: \u2014/ONE, O/NE, ON/E, ONE/\u2014. A weight is now assigned to each subset. To do this, we replace each letter in the subset by its rank in the alphabet. Then we add up these ranks within the subset. The weights of the four successive pairs above are therefore {0;34}, {15;19}, {29;5}, {34;0}. The absolute difference of the two numbers that form such a pair is called imbalance. The successive imbalances in the example here are 34, 4, 24 and 34. None is equal to 1 (\"ONE\"). Thus 1 is not in the sequence.",
        "This sequence is conjectured to be finite and full.",
        "It is true that there are no more terms. Computationally, there are none < 10^8. Let v(n) be the sum of the valuations of all the letters in the name of n.  Terms in the sequence require n < v(n). Now note that if 1000^(e-1) <= n < 1000^e, then v(n) <= (314+216)*e, where the loose upper bound comes from \"sevenhundredseventyseven\" and \"quattuordecillion\" considering all terms up to 10^66 using English names of large numbers (see Wikipedia link; similar bounds can be derived for extended naming schemes). Thus, (i) v(n) <= 530*e <= 1000^(e-1) for e >= 3; and (ii) for e < 3, v(n) <= 314 + (314+102) + (314+84) = 1128, where 102 and 84 come from \"thousand\" and \"million\", respectively. Bound (i) shows there can be no terms >= 10^6; (ii) that there are no terms >= 1128; indeed, (ii) can be extended down to show there are no terms >= 314). - _Michael S. Branicky_, Jun 03 2024"
    ],
    "link": [
        "Wikipedia, <a href=\"https://en.wikipedia.org/wiki/Names_of_large_numbers\">Names of Large Numbers</a>"
    ],
    "example": [
        "17 has an imbalance of 17 units when cut between V and E:",
        "S+E+V = 46 and E+N+T+E+E+N = 63. We have indeed 63 - 46 = 17.",
        "25 has an imbalance of 25 units when cut between N and T:",
        "T+W+E+N = 62 and T+Y+F+I+V+E = 87. We have indeed 87 - 62 = 25.",
        "The cuts in the integers below are made using the sign \u2014\u2014:",
        "SEV\u2014\u2014ENTEEN (46\u2014\u201463 = 17)",
        "TWEN\u2014\u2014TYFIVE (87\u2014\u201462 = 25)",
        "ONEHUNDRE\u2014\u2014D (104\u2014\u20144 = 100)",
        "ON\u2014\u2014EHUNDREDFIFTEEN (29\u2014\u2014144 = 115)",
        "ONEHUNDREDSIX\u2014\u2014TEEN (160\u2014\u201444 = 116)",
        "ONEHUNDREDFORTYF\u2014\u2014OUR (198\u2014\u201454 = 144)",
        "ONEHUNDREDFIFTYSE\u2014\u2014VEN (198\u2014\u201441 = 157)",
        "ON\u2014\u2014EHUNDREDEIGHTYTWO (29\u2014\u2014211 = 182)",
        "ON\u2014\u2014EHUNDREDEIGHTYFOUR (29\u2014\u2014213 = 184)",
        "ONEHUNDREDEIGHTYSI\u2014\u2014X (210\u2014\u201424 = 186)",
        "ONEHUNDREDNINETYO\u2014\u2014NE (210\u2014\u201419 = 191)",
        "ON\u2014\u2014EHUNDREDNINETYTHREE (29\u2014\u2014222 = 193)",
        "ONEHUNDREDNINETYNI\u2014\u2014NE (218\u2014\u201419 = 199)",
        "TWOHUNDREDTWENTYT\u2014\u2014HREE (259\u2014\u201436 = 223)",
        "TWOHUNDREDTHIRTYSI\u2014\u2014X (260\u2014\u201424 = 236).",
        "No integer has been found that could be cut in more than one way."
    ],
    "program": [
        "(Python)",
        "from num2words import num2words",
        "def n2w(n): return \"\".join(c for c in num2words(n).replace(\" and\", \"\") if c.isalpha())",
        "def ok(n):",
        "    d = [ord(c) - ord('A') + 1 for c in n2w(n).upper()]",
        "    if sum(d) < n: return False",
        "    return any(abs(sum(d[:i])-sum(d[i:])) == n for i in range(1, len(d)))",
        "print([k for k in range(1005) if ok(k)]) # _Michael S. Branicky_, Jun 03 2024"
    ],
    "xref": [
        "Cf. A104059, A373321 (French version), A083967, A372222."
    ],
    "keyword": "base,nonn,word,fini,full,new",
    "offset": "1,1",
    "author": "_Eric Angelini_ and _Jean-Marc Falcoz_, Jun 01 2024",
    "references": 0,
    "revision": 32,
    "time": "2024-06-03T18:24:23-04:00",
    "created": "2024-06-03T18:24:23-04:00"
}
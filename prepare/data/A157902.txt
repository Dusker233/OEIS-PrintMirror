{
    "number": 157902,
    "data": "1,2,3,12,13,22,23,300,1001,1002,1003,1012,1013,1022,1023,1102,1103,1112,1113,1122,1123,1223,1323,2323,3323,12323,13323,22323,23323,101223,101323,102323,103323,112323,113323,122323,123323,223323,323323,1113323,1122323,1123323,1223323,1323323",
    "name": "a(n) is the smallest number greater than a(n-1) whose name in UK English contains n consonants.",
    "comment": [
        "In UK English, \"1001\" is written as \"one thousand and one\".",
        "oNe = 1, TWo = 2, THRee = 3, TWeLVe = 4, THiRTeeN = 5, TWeNTyTWo = 6, TWeNTyTHRee = 7, 300 = THRee HuNDReD = 8, oNe THouSaND aND oNe = 9, oNe THouSaND aND TWo = 10, oNe THouSaND aND THRee = 11, oNe THouSaND aND TWeLVe = 12."
    ],
    "link": [
        "Wiktionary, <a href=\"https://en.wiktionary.org/wiki/one_hundred_one\">one hundred one</a> (US)",
        "Wiktionary, <a href=\"https://en.wiktionary.org/wiki/one_hundred_and_one\">one hundred and one</a> (UK)"
    ],
    "program": [
        "(Python)",
        "from num2words import num2words",
        "from itertools import count, islice",
        "def c(n): return sum(1 for c in num2words(n) if c in \"bcdfghjklmnpqrstvwxz\")",
        "def agen():",
        "    n, adict = 1, dict()",
        "    for k in count(1):",
        "        v = c(k)",
        "        if v == n: yield k; n += 1",
        "print(list(islice(agen(), 39))) # _Michael S. Branicky_, Aug 09 2022"
    ],
    "keyword": "nonn,word",
    "offset": "1,2",
    "author": "_Rodolfo Kurchan_, Mar 08 2009",
    "ext": [
        "Edited by _Jon E. Schoenfield_, Oct 06 2018",
        "a(16) and beyond from _Michael S. Branicky_, Aug 09 2022"
    ],
    "references": 0,
    "revision": 12,
    "time": "2022-08-09T09:05:23-04:00",
    "created": "2010-06-01T03:00:00-04:00"
}